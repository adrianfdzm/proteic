{"version":3,"file":null,"sources":["../src/svg/strategies/SvgStrategy.ts","../src/utils/functions.ts","../src/charts/Chart.ts","../src/svg/components/Component.ts","../src/svg/components/XAxis.ts","../src/utils/dataTransformation.ts","../src/svg/components/YAxis.ts","../src/svg/components/XYAxes.ts","../src/svg/components/Lineset.ts","../src/svg/components/Pointset.ts","../src/svg/components/Areaset.ts","../src/svg/components/Legend.ts","../src/svg/components/Container.ts","../src/svg/base/SvgChart.ts","../src/utils/dataSorting.ts","../src/svg/strategies/SvgStrategyLinechart.ts","../src/Config.ts","../src/utils/colors.ts","../src/utils/defaults/linechart.ts","../src/utils/screen.ts","../src/charts/Linechart.ts","../src/svg/components/Barset.ts","../src/svg/strategies/SvgStrategyBarchart.ts","../src/utils/defaults/barchart.ts","../src/charts/Barchart.ts","../src/svg/components/Dial.ts","../src/svg/components/DialNeedle.ts","../src/svg/components/TextIndicator.ts","../src/svg/strategies/SvgStrategyGauge.ts","../src/utils/defaults/gauge.ts","../src/charts/Gauge.ts","../src/svg/components/CanvasPointset.ts","../src/svg/strategies/SvgStrategyScatterplot.ts","../src/utils/defaults/scatterplot.ts","../src/charts/Scatterplot.ts","../src/svg/components/Streamset.ts","../src/svg/strategies/SvgStrategyStreamgraph.ts","../src/utils/defaults/streamgraph.ts","../src/charts/Streamgraph.ts","../src/utils/defaults/stackedArea.ts","../src/charts/StackedArea.ts","../src/svg/components/Timeboxset.ts","../src/svg/strategies/SvgStrategySwimlane.ts","../src/utils/defaults/swimlane.ts","../src/charts/Swimlane.ts","../src/svg/components/XRadialAxis.ts","../src/svg/components/YRadialAxis.ts","../src/svg/components/RadialAxes.ts","../src/svg/components/SunburstDisk.ts","../src/svg/strategies/SvgStrategySunburst.ts","../src/utils/defaults/sunburst.ts","../src/charts/Sunburst.ts","../src/datasources/Datasource.ts","../src/datasources/WebsocketDatasource.ts","../src/datasources/HTTPDatasource.ts"],"sourcesContent":["import Config from '../../Config';\nimport SvgChart from '../base/SvgChart';\n\n\nexport class SvgContext {\n    private strategy: SvgChart;\n\n    constructor(strategy: SvgChart, config: Config) {\n        this.strategy = strategy;\n        this.strategy.setConfig(config);\n        this.strategy.initialize();\n    }\n\n    public draw(data: [{}]): void {\n        this.strategy.draw(data);\n    }\n}","\nexport function isArray(d) {\n  return d && d.constructor === Array && d instanceof Array;\n}\n\nexport function isObject(d) {\n  return d && d.constructor === Object && d instanceof Object;\n}\n\nexport function isFunction(func) {\n  return func && {}.toString.call(func) === '[object Function]';\n}\n\nexport function isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nexport function isEven(n) {\n  return n % 2 === 0;\n}\n\nexport function isPercentage(n) {\n  let split = null;\n  let number = null;\n  if (!n || typeof n !== 'string') {\n    return false;\n  }\n  split = n.split('%');\n  number = (+split[0]);\n  return split.length === 2 &&\n    (number >= 0) &&\n    (number <= 100);\n}\n\nexport function keys(array, field) {\n  var keys = new Set();\n  var element = null;\n\n  if (!array || !array.length) {\n    return [];\n  }\n\n  for (let i = 0; i < array.length; i++) {\n    element = field ? array[i][field] : array[i];\n    if (element) {\n      keys.add(element);\n    }\n  }\n  return keys;\n}\n\n\nexport function sortBy(array, o) {\n  var _toString = Object.prototype.toString;\n  var _parser = (x) => { return x; };\n  var _getItem = (x) => {\n    return _parser((x !== null && typeof x === 'object' && x[o.prop]) || x);\n  };\n\n  if (!(array instanceof Array) || !array.length) {\n    return [];\n  }\n  if (_toString.call(o) !== '[object Object]') {\n    o = {};\n  }\n  if (typeof o.parser !== 'function') {\n    o.parser = _parser;\n  }\n  o.desc = o.desc ? -1 : 1;\n  return array.sort((a, b) => {\n    a = _getItem.call(o, a);\n    b = _getItem.call(o, b);\n    return o.desc * (a < b ? -1 : +(a > b));\n  });\n}\n\nexport function findElement(arr, propName, propValue) {\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i][propName] === propValue) {\n      return arr[i];\n    }\n  }\n  return null;\n}\n\nexport function copy(object){\n  return object != null ? JSON.parse(JSON.stringify(object)) : null;\n}\n\nexport function deg2rad(deg) {\n  return deg * Math.PI / 180;\n}","import { SvgContext } from '../svg/strategies/SvgStrategy'\nimport SvgChart from '../svg/base/SvgChart';\nimport Config from '../Config';\nimport { copy } from '../utils/functions';\nimport Datasource from '../datasources/Datasource';\n\nimport {dispatch} from 'd3';\n\nabstract class Chart {\n\n    private context: SvgContext;\n    protected config: Config;\n    protected data: [{}];\n    private ds: Datasource = null;\n    private dispatcher: any = dispatch('onmessage', 'onopen', 'onerror');\n\n\n    constructor(strategy: SvgChart, data: any, userConfig: any) {\n        this.config = this.loadConfigFromUser(userConfig);\n        this.context = new SvgContext(strategy, this.config);\n        this.data = data;\n    }\n\n    public draw(data: [{}] = this.data) { //TODO: SPLIT DATA INTO SMALL CHUNKS (stream-like). \n        this.context.draw(copy(data));\n        this.data = data;\n    }\n\n    /**\n     * \n     * Configure a datasources for the current instance. Datasources allows data to be catached from many sources, such as websockets endpoints, HTTP urls, etc.\n     * @param {Datasource} ds A datasource\n     * \n     * @memberOf Chart\n    \n     */\n    public datasource(ds: Datasource) {\n        this.ds = ds;\n\n        this.ds.configure(this.dispatcher);\n\n        this.dispatcher.on('onmessage', (data) => this.keepDrawing(data));\n\n        this.dispatcher.on('onopen', (event) => {\n            console.log('onopen', event);\n        });\n\n        this.dispatcher.on('onerror', (error) => {\n            console.log('onerror', error);\n        });\n\n    }\n\n    protected abstract loadConfigFromUser(userData: { [key: string]: any; }): Config;\n\n    protected abstract keepDrawing(datum: any);\n\n}\n\nexport default Chart;","import Config from '../../Config';\n\nabstract class Component {\n\n    protected config: Config;\n    protected svg: any;\n\n    constructor() {\n    }\n\n    abstract update(data): void;\n    abstract render(): void;\n\n    /**\n     * \n     * Configure this component to use a given configuration and a SVG selector. This method is automatically by the Container.\n     * @param {Config} config A configuration object\n     * @param {*} svg A D3 selector object\n     * \n     * @memberOf Component\n    \n     */\n    public configure(config: Config, svg: any) {\n        this.config = config;\n        this.svg = svg;\n    }\n\n    /**\n     * \n     * Clean the current series.\n     */\n    public clean () {\n        this.svg.selectAll('.serie').remove();\n    }\n\n};\n\nexport default Component;    \n","import {\n    map,\n    select,\n    scaleTime,\n    scaleLinear,\n    scaleBand,\n    format,\n    axisBottom,\n    timeParse,\n    min as d3Min,\n    max as d3Max\n} from 'd3';\n\nimport Component from './Component';\nimport Config from '../../Config';\n\nimport { isEven } from '../../utils/functions';\n\nclass XAxis extends Component {\n\n    private _xAxis: any;\n\n    constructor() {\n        super();\n    }\n\n\n    public render(): void {\n        let width = this.config.get('width'),\n            height = this.config.get('height'),\n            xAxisFormat = this.config.get('xAxisFormat'),\n            xAxisType = this.config.get('xAxisType'),\n            xAxisLabel = this.config.get('xAxisLabel');\n\n        this.initializeXAxis(width, xAxisFormat, xAxisType);\n\n        this.svg\n            .append('g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + height + ')')\n            .call(this._xAxis);\n\n        this.svg\n            .append('text')\n            .attr('class', 'xaxis-title')\n            .attr(\"text-anchor\", \"middle\")\n            .attr('x', width / 2)\n            .attr('y', height + 40)\n            .text(xAxisLabel)\n            .style('font', '0.8em Montserrat, sans-serif');\n    }\n\n    public update(data: [any]): void {\n        let xAxisType = this.config.get('xAxisType');\n\n        if (xAxisType === 'linear') {\n            //TODO: Optimize it. Currently we are looping data twice.\n            let min = d3Min(data, (d) => d.x),\n                max = d3Max(data, (d) => d.x);\n            this.updateDomainByMinMax(min, max);\n\n        } else if (xAxisType === 'time') {\n            let min = d3Min(data, (d) => (d.x || d.start)),\n                max = d3Max(data, (d) => (d.x || d.end));\n            this.updateDomainByMinMax(min, max);\n            \n        }\n        else {\n            let keys: [string] = map(data, (d) => d.x).keys();\n            this.updateDomainByKeys(keys);\n        }\n\n        this.transition();\n    }\n    /**\n     * \n     * Update x domain by keys\n     * @private\n     * @param {*} data\n     * \n     * @memberOf XAxis\n    \n     */\n    private updateDomainByKeys(keys: [string]) {\n        this._xAxis.scale().domain(keys);\n\n    }\n\n    private updateDomainByMinMax(min, max) {\n        this._xAxis.scale().domain([min, max]);\n    }\n\n    private transition(time: number = 200) {\n        this.svg.selectAll('.x.axis').transition().duration(time).call(this._xAxis).on('end', this.applyStyle);\n    }\n\n    private applyStyle() {\n        select(this).selectAll('g.tick text')\n            .style('font', '1.4em Montserrat, sans-serif')\n            .style('fill', (d, i) => !isEven(i) || i === 0 ? '#5e6b70' : '#1a2127')\n            .style('fill', (d) => '#1a2127')\n\n        select(this).selectAll(['path', 'line'])\n            .attr('stroke', 'gray')\n            .attr('stroke-width', .3);\n    }\n\n    /**\n     *\n     * Initializes a new horizontal axis\n     *\n     * @private\n     * @param {(string | number)} Width Width of the axis\n     * @param {string} xAxisFormat Format of the axis. This parameter is only valid when using a time axis.\n     * @param {string} xAxisType Type of the axis. It can be: time, linear or categorical.\n     *\n     * @memberOf XAxis\n     */\n    private initializeXAxis(width: string | number, xAxisFormat: string, xAxisType: string): void {\n        switch (xAxisType) {\n            case 'time':\n                this._xAxis = axisBottom(scaleTime().range([0, width]));\n                break;\n            case 'linear':\n                this._xAxis = axisBottom(scaleLinear().range([0, width])).tickFormat(format(xAxisFormat));\n                break;\n            case 'categorical':\n                this._xAxis = axisBottom(scaleBand().rangeRound([0, width]).padding(0.1).align(0.5));\n                break;\n            default:\n                throw new Error('Not allowed type for XAxis. Only allowed \"time\",  \"linear\" or \"categorical\". Got: ' + xAxisType);\n        }\n    }\n\n    get xAxis() {\n        return this._xAxis;\n    }\n}\n\nexport default XAxis;","import { nest, timeParse } from 'd3';\n\nexport function simple2stacked (data) : [any] {\n  return nest().key((d) => d.x).rollup((array) => {\n    let r = {};\n    for (let i = 0; i < array.length; i++) {\n      let object = array[i];\n      if (object) {\n        r[object.key] = object.y;\n      }\n    }\n    return r;\n  }).entries(data);\n}\n\nexport function simple2nested (data, key = 'key') : [any]{\n  return nest().key((d) => d[key]).entries(data);\n}\n\nexport function nested2simple(data) {\n  let array = Array();\n  for (let i = 0; i < data.length; i++) {\n    for (let j = 0; j < data[i].values.length; j++) {\n      let key = data[i].key;\n      let x = data[i].values[j].x;\n      let y = data[i].values[j].y;\n      array.push({ key: key, x: x, y: y });\n    }\n  }\n  return array;\n}\n\nexport function simple2Linked(data) {\n  var linkedData = { links: [], nodes: [] };\n  data.map((d) => d.key === 'link' ? linkedData.links.push(d) : linkedData.nodes.push(d));\n  return linkedData;\n}\n\n\nexport function convertPropretiesToTimeFormat(data, properties, format) {\n  data.forEach((d) => {\n    properties.map((p) => {\n      d[p] = timeParse(format)(d[p]);\n    });\n  });\n}\n\nexport function convertByXYFormat(data, xAxisFormat: string, xAxisType: string, yAxisFormat: string, yAxisType: string) {\n  data.forEach((d) => {\n    //parse x coordinate\n    switch (xAxisType) {\n      case 'time':\n        d.x = timeParse(xAxisFormat)(d.x);\n        break;\n      case 'linear':\n        d.x = +d.x;\n        break;\n    }\n    //parse Y coordinate\n    switch (yAxisType) {\n      case 'time':\n        d.y = timeParse(yAxisFormat)(d.y);\n        break;\n      case 'linear':\n        d.y = +d.y;\n        break;\n    }\n  });\n  return data;\n}","import Config from '../../Config';\nimport Component from './Component';\nimport {\n    stack,\n    map,\n    stackOrderInsideOut,\n    stackOffsetWiggle,\n    select,\n    scaleLinear,\n    scaleBand,\n    format,\n    axisLeft,\n    min as d3Min,\n    max as d3Max\n} from 'd3';\n\nimport { isEven } from '../../utils/functions';\nimport {simple2stacked} from '../../utils/dataTransformation';\n\nclass YAxis extends Component {\n\n    private _yAxis: any;\n\n    constructor() {\n        super();\n    }\n    \n\n    public render(): void {\n        let width = this.config.get('width'),\n            height = this.config.get('height'),\n            yAxisFormat = this.config.get('yAxisFormat'),\n            yAxisType = this.config.get('yAxisType'),\n            yAxisLabel = this.config.get('yAxisLabel');\n\n        this.initializeYAxis(width, height, yAxisFormat, yAxisType);\n\n        this.svg\n            .append('g')\n            .attr('class', 'y axis')\n            .attr('stroke-dasharray', '1, 5')\n            .call(this._yAxis);\n\n        this.svg\n            .append('text')\n            .attr('class', 'yaxis-title')\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr('x', 0 - height / 2)\n            .attr('y', 0 - 55)\n            .text(yAxisLabel)\n            .style('font', '0.8em Montserrat, sans-serif');\n    }\n\n    public update(data): void {\n        let yAxisType = this.config.get('yAxisType'),\n            yAxisShow = this.config.get('yAxisShow'),\n            layoutStacked = this.config.get('stacked');\n\n        this.svg.select('g.y.axis').attr('opacity', yAxisShow ? 1 : 0);\n\n        if (yAxisType === 'linear') {\n            if (layoutStacked) { //TODO: Improve\n                let keys: [string] = map(data, (d) => d.key).keys();\n                let stack = this.config.get('stack');\n                let stackedData = stack.keys(keys)(simple2stacked(data));\n                let min = d3Min(stackedData, (serie) => d3Min(serie, (d) => d[0]));\n                let max = d3Max(stackedData, (serie) => d3Max(serie, (d) => d[1]));\n                this.updateDomainByMinMax(min, max);\n            } else {\n                let min = d3Min(data, (d) => d.y),\n                    max = d3Max(data, (d) => d.y);\n\n                this.updateDomainByMinMax(min, max);\n            }\n        } else if (yAxisType === 'categorical') {\n            let keys = map(data, (d) => d.key).keys().sort();\n            this._yAxis.scale().domain(keys);\n        }\n        else {\n            console.warn('could not recognize y axis type', yAxisType);\n        }\n\n        this.transition();\n    }\n\n    private updateDomainByMinMax(min, max) {\n        this._yAxis.scale().domain([min, max]);\n    }\n\n    private transition(time = 200) {\n        this.svg.selectAll('.y.axis').transition().duration(200).call(this._yAxis).on('end', this.applyStyle);\n\n    }\n\n\n    private applyStyle() {\n        select(this).selectAll('g.tick text')\n            .style('font', '1.4em Montserrat, sans-serif')\n            .style('fill', (d, i) => !isEven(i) || i === 0 ? '#5e6b70' : '#1a2127');\n        select(this).selectAll('g.tick line')\n            .style('stroke', (d, i) => isEven(i) && i !== 0 ? '#5e6b70' : '#dbdad8');\n    }\n\n    /**\n     *\n     * Initializes a new vertical axis\n     *\n     * @private\n     * @param {(string | number)} Width Width of the axis\n     * @param {string} yAxisFormat Format of the axis. This parameter is only valid when using a time axis.\n     * @param {string} yAxisType Type of the axis. It can be: linear or categorical.\n     *\n     * @memberOf XAxis\n     */\n\n    private initializeYAxis(width: string | number, height: string | number, yAxisFormat: string, yAxisType: string): void {\n        switch (yAxisType) {\n            case 'linear':\n                this._yAxis = axisLeft(scaleLinear().range([height, 0])).tickFormat(format(yAxisFormat)).tickSizeInner(-width).tickSizeOuter(0).tickPadding(20);\n                break;\n            case 'categorical':\n                this._yAxis = axisLeft(scaleBand().rangeRound([height, 0]).padding(0.1).align(0.5));\n                break;\n            default:\n                throw new Error('Not allowed type for YAxis. Only allowed \"time\",  \"linear\" or \"categorical\". Got: ' + yAxisType);\n        }\n\n        this._yAxis\n            .tickSizeInner(-width)\n            .tickSizeOuter(0)\n            .tickPadding(20);\n    }\n\n    get yAxis() {\n        return this._yAxis;\n    }\n}\n\nexport default YAxis;","import XAxis from './XAxis';\nimport YAxis from './YAxis';\n\nimport Config from '../../Config';\nimport Component from './Component';\n\nclass XYAxis extends Component {\n    private _x: XAxis;\n    private _y: YAxis;\n\n    constructor() {\n        super();\n\n        this._x = new XAxis();\n        this._y = new YAxis();\n    }\n\n    public render(): void {\n        this._x.render();\n        this._y.render();\n\n    }\n\n    public update(data): void {\n        this._x.update(data);\n        this._y.update(data);\n    }\n    \n    \n    public configure(config: Config, svg: any){\n        super.configure(config, svg);\n        this._x.configure(config, svg);\n        this._y.configure(config, svg);\n    }\n\n    get x(): XAxis {\n        return this._x;\n    }\n\n    get y(): YAxis {\n        return this._y;\n    }\n\n\n}\n\nexport default XYAxis;","\nimport Component from './Component';\nimport XYAxes from './XYAxes';\nimport Config from '../../Config';\n\nimport {line, nest} from 'd3';\n\nclass Lineset extends Component {\n\n    private xyAxes: XYAxes;\n    private lineGenerator: any;\n\n    constructor(xyAxes: XYAxes) {\n        super();\n        this.xyAxes = xyAxes;\n        this.lineGenerator = line()\n            .x((d) => this.xyAxes.x.xAxis.scale()(d.x))\n            .y((d) => this.xyAxes.y.yAxis.scale()(d.y));\n    }\n\n\n    public render(): void {\n        //Do nothing, since lines render only when new data is received.\n    }\n\n    public update(data: [any]): void {\n        \n        let dataSeries = nest().key((d) => d.key).entries(data),\n            series = null,\n            lines = null,\n            colorScale = this.config.get('colorScale');\n\n        this.svg.selectAll('g.serie').remove();               \n        series = this.svg.selectAll('g.serie');\n\n        lines = series\n            .data(dataSeries, (d) => d.key)\n            .enter()\n            .append('g')\n            .attr('class', 'serie')\n            .attr('stroke', (d, i) => colorScale(i))\n            .append('svg:path')\n            .style('stroke', (d, i) => colorScale(i))\n            .style('stroke-width', 1.3)\n            .style('fill', 'none')\n            .attr('d', (d) => this.lineGenerator(d.values))\n            .attr('class', 'line');\n    }\n\n}\n\nexport default Lineset;","import Component from './Component';\nimport Config from '../../Config';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\n\nimport {\n  selection,\n  nest\n} from 'd3';\n\nclass Pointset extends Component {\n\n  private x: XAxis;\n  private y: YAxis;\n\n  constructor(x: XAxis, y: YAxis) {\n    super();\n    this.x = x;\n    this.y = y;\n  }\n\n\n\n  public render() {\n    //Do nothing, since points render only when new data is received.\n\n  }\n\n  public update(data: [any]) {\n    let dataSeries = nest()\n      .key((d) => d.key)\n      .entries(data),\n      markers = null,\n      markerShape = this.config.get('markerShape'),\n      markerSize = this.config.get('markerSize'),\n      markerOutlineWidth = this.config.get('markerOutlineWidth'),\n      colorScale = this.config.get('colorScale'),\n      points = null,\n      series = null;\n\n    this.svg.selectAll('g.points').remove();\n\n    series = this.svg.selectAll('g.points');\n\n    switch (markerShape) {\n      case 'dot':\n        points = series\n          .data(dataSeries, (d) => d.key)\n          .enter()\n          .append('g')\n          .attr('class', 'points')\n          .style('fill', (d, i) => colorScale(i))\n          .selectAll('circle')\n          .data((d) => d.values)\n          .enter()\n          .append('circle')\n          .attr('cx', (d) => this.x.xAxis.scale()(d.x))\n          .attr('cy', (d) => this.y.yAxis.scale()(d.y))\n          .attr('r', markerSize)\n          .attr('class', 'marker');\n        break;\n      case 'ring':\n        window.console.warn('Deprecated \"circle\" marker shape: use \"dot\" or \"ring\" instead');\n        points = series\n          .data(dataSeries, (d) => d.key)\n          .enter()\n          .append('g')\n          .attr('class', 'points')\n          .style('stroke', (d, i) => colorScale(i))\n          .selectAll('circle')\n          .data((d, i) => d.values)\n          .enter()\n          .append('circle')\n          .attr('cx', (d) => this.x.xAxis.scale()(d.x))\n          .attr('cy', (d) => this.y.yAxis.scale()(d.y))\n          .attr('r', markerSize)\n          .attr('class', 'marker')\n          .style('fill', 'white')\n          .style('stroke-width', markerOutlineWidth);\n        break;\n      // Deprecated circle option\n      case 'circle':\n        window.console.warn('Deprecated \"circle\" marker shape: use \"dot\" or \"ring\" instead');\n        points = series\n          .data(dataSeries, (d) => d.key)\n          .enter()\n          .append('g')\n          .attr('class', 'points')\n          .style('stroke', (d, i) => colorScale(i))\n          .selectAll('circle')\n          .data((d, i) => d.values)\n          .enter()\n          .append('circle')\n          .attr('cx', (d) => this.x.xAxis.scale()(d.x))\n          .attr('cy', (d) => this.y.yAxis.scale()(d.y))\n          .attr('r', markerSize)\n          .attr('class', 'lineMarker')\n          .style('fill', 'white')\n          .style('stroke-width', markerOutlineWidth);\n        break;\n      default:\n        points = series\n          .data(dataSeries, (d) => d.key)\n          .enter()\n          .append('g')\n          .attr('class', 'points')\n          .style('stroke', (d, i) => colorScale(i))\n          .selectAll('circle')\n          .data((d, i) => d.values)\n          .enter()\n          .append('circle')\n          .attr('cx', (d) => this.x.xAxis.scale()(d.x))\n          .attr('cy', (d) => this.y.yAxis.scale()(d.y))\n          .attr('r', markerSize)\n          .attr('class', 'lineMarker')\n          .style('fill', 'white')\n          .style('stroke-width', markerOutlineWidth);\n    }\n\n    markers = this.svg.selectAll('g.points circle');\n    markers\n      .on('mousedown.user', this.config.get('onDown'))\n      .on('mouseup.user', this.config.get('onUp'))\n      .on('mouseleave.user', this.config.get('onLeave'))\n      .on('mouseover.user', this.config.get('onHover'))\n      .on('click.user', this.config.get('onClick'));\n  }\n\n}\n\nexport default Pointset;","import Component from './Component';\nimport Config from '../../Config';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\n\nimport {\n  area,\n  selection,\n  nest\n} from 'd3';\n\n\nclass Areaset extends Component {\n\n  private x: XAxis;\n  private y: YAxis;\n\n  constructor(x: XAxis, y: YAxis) {\n    super();\n    this.x = x;\n    this.y = y;\n  }\n\n  public render() {\n    //Do nothing, since points render only when new data is received.\n\n  }\n\n  public update(data: [any]) {\n    let dataSeries = nest()\n      .key((d) => d.key)\n      .entries(data),\n      series = null,\n      areas = null,\n      colorScale = this.config.get('colorScale'),\n      height = this.config.get('height'),\n      areaOpacity = this.config.get('areaOpacity');\n\n    let areaGenerator = area()\n      .x((d) => this.x.xAxis.scale()(d.x))\n      .y0(height)\n      .y1((d) => this.y.yAxis.scale()(d.y));\n\n    this.svg.selectAll('g.area').remove();\n\n    series = this.svg.selectAll('g.area');\n    areas = series\n      .data(dataSeries, (d) => d.key)\n      .enter()\n      .append('g')\n      .attr('class', 'area')\n      .append('svg:path')\n      .style('fill', (d, i) => colorScale(i))\n      .style('fill-opacity', areaOpacity)\n      .attr('d', (d) => areaGenerator(d.values));\n  }\n\n}\n\nexport default Areaset;","import Component from './Component';\nimport Config from '../../Config';\n\nimport {\n  selection,\n  nest\n} from 'd3';\n\n\nclass Legend extends Component {\n\n\n  constructor() {\n    super();\n  }\n\n  public render() {\n    //Do nothing, since points render only when new data is received.\n\n  }\n\n  public update(data: [any]) {\n    let dataSeries = nest()\n      .key((d) => d.key)\n      .entries(data),\n      legend = null,\n      entries = null,\n      colorScale = this.config.get('colorScale'),\n      height = this.config.get('height'),\n      width = this.config.get('width');\n\n    if (dataSeries.length === 1 && dataSeries[0].key === 'undefined') {\n      console.warn('Not showing legend, since there is a valid key');\n      return;\n    }\n\n    this.svg.selectAll('g.legend').remove();\n\n    legend = this.svg.append('g').attr('class', 'legend');\n    entries = legend.selectAll('.legend-entry')\n      .data(dataSeries, (d) => d.key)\n      .enter()\n      .append('g')\n      .attr('class', 'legend-entry');\n\n\n    entries.append('rect')\n      .attr('x', width + 10)\n      .attr('y', (d, i) => i * 25)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', (d, i) => colorScale(i))\n      .style('opacity', 0.8);\n\n    entries.append('text')\n      .attr(\"x\", width + 25 + 10)\n      .attr(\"y\", (d, i) => i * 25 + 7)\n      .attr(\"dy\", \"0.55em\")\n      .text((d) => d.key)\n      .style('font', '14px Montserrat, sans-serif');\n\n  }\n\n}\n\nexport default Legend;","import { select, Selection } from 'd3';\n\nimport Component from './Component';\nimport Config from '../../Config';\n\nclass Container {\n\n    private svg: Selection<any, any, any, any>;\n\n    private config: Config;\n    private components: Component[] = [];\n\n    constructor(config: Config) {\n        this.config = config;\n\n        let selector: string = this.config.get('selector'),\n            width: number = this.config.get('width'),\n            height: number = this.config.get('height'),\n            marginLeft: number = this.config.get('marginLeft'),\n            marginRight: number = this.config.get('marginRight'),\n            marginTop: number = this.config.get('marginTop'),\n            marginBottom: number = this.config.get('marginBottom');\n\n        width += marginLeft + marginRight;\n        height += marginTop + marginBottom;\n\n        this.initializeContainer(selector, width, height, marginLeft, marginTop);\n    }\n\n    /**\n     * Add a new component to the current SVG container.\n     * \n     * @param {Component} component A component to be added\n     * @param {boolean} render If true, the component will be automatically rendered after adding it to the container\n     * @returns {Container}\n     * \n     * @memberOf Container\n    \n     */\n    public add(component: Component): Container {\n        this.components.push(component);\n        component.configure(this.config, this.svg);\n        component.render();\n        return this;\n    }\n\n    /**\n     * \n     * Initialize the svg container. \n     * @private\n     * @param {string} selector Selector where this graph will be included in\n     * @param {((number | string))} width Total width of the graph\n     * @param {((number | string))} height Total height of the graph\n     * @param {number} marginLeft Left margin\n     * @param {number} marginTop Top margin\n     * \n     * @memberOf Container\n    \n     */\n    private initializeContainer(selector: string, width: (number | string), height: (number | string), marginLeft: number, marginTop: number): void {\n        this.svg = select(selector)\n            .style('position', 'relative')\n            .style('width', `${width}px`)\n            .style('height', `${height}px`)\n            .append('svg:svg')\n            .style('position', 'absolute')\n            .attr('width', width)\n            .attr('height', height)\n            .append('g')\n            .attr('class', 'chartContainer')\n            .attr('transform', 'translate(' + marginLeft + ',' + marginTop + ')');\n    }\n\n    /**\n     * \n     * Update all the components previously added to this container.\n     * @param {[{}]} data Data necessary to update the componnets\n     * \n     * @memberOf Container\n    \n     */\n    public updateComponents(data: [{}]): void {\n        for (let i = 0; i < this.components.length; i++) {\n            let component = this.components[i];\n            component.update(data);\n        }\n    }\n\n    public translate(x: Number, y: Number) {\n        this.svg.attr('transform', `translate(${x}, ${y})`)\n    }\n}\n\nexport default Container;","import Container from '../components/Container';\nimport Config from '../../Config';\n\nabstract class SvgChart {\n\n    protected container: Container;\n    protected config: Config;\n\n    constructor() {\n\n    }\n\n    initialize() {\n        this.container = new Container(this.config);\n    }\n\n    setConfig(config: Config) {\n        this.config = config;\n    }\n\n    abstract draw(data: [{}]);\n\n\n\n}\n\nexport default SvgChart;","export function sortByField (array, field){\n    array.sort((e1, e2) => {\n        var a = e1[field];\n        var b = e2[field];\n        return (a < b) ? -1 : (a > b) ? 1 : 0;   \n    });\n}","import XYAxes from '../components/XYAxes';\nimport Lineset from '../components/Lineset';\nimport Pointset from '../components/Pointset';\nimport Areaset from '../components/Areaset';\nimport Legend from '../components/Legend';\n\nimport Config from '../../Config';\nimport SvgChart from '../base/SvgChart';\nimport { sortByField } from '../../utils/dataSorting';\nimport { convertByXYFormat } from '../../utils/dataTransformation';\n\nclass SvgStrategyLinechart extends SvgChart {\n    /**\n     * \n     * XY Axes. Horizontal and vertical references\n     * \n     * @private\n     * @type {XYAxes}\n     * @memberOf SvgStrategyLinechart\n     */\n    private axes: XYAxes;\n\n    /**\n     * \n     * Set of lines. The numbers of lines depends on data. Every draw() call lines are automatically updated.\n     * @private\n     * @type {Lineset}\n     * @memberOf SvgStrategyLinechart\n    \n     */\n    private lines: Lineset;\n\n\n    private markers : Pointset;\n\n    private area : Areaset;\n\n    private legend : Legend;\n\n\n    constructor() {\n        super();\n        this.axes = new XYAxes();\n        this.lines = new Lineset(this.axes);\n    }\n\n    public draw(data: [{}]) {\n        let xAxisFormat = this.config.get('xAxisFormat'),\n            xAxisType = this.config.get('xAxisType'),\n            yAxisFormat = this.config.get('yAxisFormat'),\n            yAxisType = this.config.get('yAxisType');\n\n        convertByXYFormat(data, xAxisFormat, xAxisType, yAxisFormat, yAxisType);\n        sortByField(data, 'x');\n\n        this.container.updateComponents(data);\n    }\n\n\n    public initialize(): void {\n        super.initialize();\n        let markerSize = this.config.get('markerSize'),\n            areaOpacity = this.config.get('areaOpacity'),\n            legend = this.config.get('legend');\n\n        this.container.add(this.axes).add(this.lines);\n\n        if (areaOpacity > 0) {\n            this.area = new Areaset(this.axes.x, this.axes.y);\n            this.container.add(this.area);\n        }\n\n        if (markerSize > 0) {\n            this.markers = new Pointset(this.axes.x, this.axes.y);\n            this.container.add(this.markers);\n        }\n\n        if(legend){\n            this.legend = new Legend();\n            this.container.add(this.legend);\n        }\n    }\n}\n\nexport default SvgStrategyLinechart;","class Config {\n    private properties: { [key: string]: any; } = {};\n\n    constructor() {\n    }\n    public put(key: string, value: any) {\n        this.properties[key] = value;\n        return this;\n    }\n    public get(key: string): any {\n        return this.properties[key];\n    }\n};\n\nexport default Config;","import {scaleOrdinal, scaleQuantile} from 'd3';\n\nconst paletteCategory1 = [\n    '#e1c8df',\n    '#9ecd9d',\n    '#acd9d6',\n    '#e4e36b',\n    '#bfa1c5',\n    '#e4d3b8',\n    '#facba8',\n    '#ced4ea',\n    '#acd9d6'\n];\n\nconst paletteCategory2 = [\n    '#b6dde2',\n    '#6394af',\n    '#e4e9ab',\n    '#8ea876',\n    '#f7dce1',\n    '#cc878f',\n    '#fadaac',\n    '#f29a83',\n    '#8d7e9e'\n];\n\nconst paletteCategory3 = [\n    '#6b68a9',\n    '#8cc590',\n    '#b9487d',\n    '#bfa1c5',\n    '#4e6936',\n    '#71bbc3',\n    '#484156',\n    '#ccaf44',\n    '#d0553c'\n];\n\nconst paletteCategory4 = [\n    '#f1a30d',\n    '#1d4763',\n    '#84c7bc',\n    '#c1212d',\n    '#8fbe46',\n    '#076837',\n    '#563a2d',\n    '#563a2d',\n    '#87325d'\n];\n\nconst paletteCategory5 = [\n    '#f1a30d',\n    '#0c3183',\n    '#acd9d6',\n    '#c1212d',\n    '#8fbe46',\n    '#076837',\n    '#8a6338',\n    '#8d2d84',\n    '#f09bbc'\n];\n\nconst paletteCategory6 = [\n    '#71bbc3',\n    '#1d4763',\n    '#8fbe46',\n    '#4e6936',\n    '#ee8998',\n    '#c1212d',\n    '#f5af3c',\n    '#e95e2e',\n    '#634484'\n];\n\nconst paletteCategory7 = [\n    '#ea671e',\n    '#684592',\n    '#84b92a',\n    '#cd131c',\n    '#3c5ba2',\n    '#5baddc',\n    '#ffde06',\n    '#5db68b',\n    '#775e47'\n];\n\nconst paletteCategory8 = [\n    '#ebd646',\n    '#a50f38',\n    '#00a096',\n    '#f09bbc',\n    '#065b78',\n    '#72722a',\n    '#005231',\n    '#4d4e98',\n    '#7c4d25'\n];\n\nconst paletteSequentialYellow = [\n    '#fff1c6',\n    '#fee5a7',\n    '#fcda87',\n    '#face64',\n    '#f8bf4b',\n    '#f6b030',\n    '#f4a009',\n    '#d28514',\n    '#b36c17',\n    '#955618',\n    '#7a4317',\n    '#613214',\n    '#49230f'\n];\n\nconst paletteSequentialRedOrange = [\n    '#ffecb8',\n    '#fbd68b',\n    '#f7bf5e',\n    '#f3a82f',\n    '#df7520',\n    '#cd4925',\n    '#be0a26',\n    '#a81023',\n    '#941320',\n    '#80141d',\n    '#6d1419',\n    '#5a1215',\n    '#470f0f'\n];\n\nconst paletteSequentialRed = [\n    '#fde4d4',\n    '#f1c4af',\n    '#f7bf5e',\n    '#db826a',\n    '#d0614d',\n    '#c73e36',\n    '#be0a26',\n    '#a81023',\n    '#941320',\n    '#80141d',\n    '#6d1419',\n    '#5a1215',\n    '#470f0f'\n];\n\nconst paletteSequentialPink = [\n    '#fbe3e3',\n    '#f9cfcc',\n    '#f0aaa9',\n    '#ed7e7e',\n    '#ea647b',\n    '#e74576',\n    '#e41270',\n    '#c70f65',\n    '#aa105c',\n    '#8d1253',\n    '#731448',\n    '#5a123c',\n    '#420e30'\n];\n\nconst paletteSequentialPurplePink = [\n    '#f9d8e6',\n    '#ebbed7',\n    '#dda4c7',\n    '#c890bb',\n    '#b27daf',\n    '#8a4c94',\n    '#622181',\n    '#622181',\n    '#50216b',\n    '#472060',\n    '#3e1f55',\n    '#361e4b',\n    '#2d1c41'\n];\n\nconst paletteSequentialPurple = [\n    '#f6e8f1',\n    '#dcc5de',\n    '#c2a3c9',\n    '#a980b3',\n    '#905e9f',\n    '#793f8e',\n    '#622181',\n    '#592175',\n    '#4f216b',\n    '#462060',\n    '#3d1f55',\n    '#351e4b',\n    '#2c1c41'\n];\n\nconst paletteSequentialBlue = [\n    '#e5f2f9',\n    '#d1e5f5',\n    '#afd3ed',\n    '#91afd7',\n    '#738bbf',\n    '#3c5a9e',\n    '#0c3183',\n    '#132a68',\n    '#10204c',\n    '#0b193b',\n    '#06142f',\n    '#051228',\n    '#061020'\n];\n\nconst paletteSequentialLightBlue = [\n    '#eff8fd',\n    '#d9eff6',\n    '#c2e5ef',\n    '#a8dae8',\n    '#90cbe4',\n    '#76b8e1',\n    '#5baddc',\n    '#4d96cc',\n    '#427ebc',\n    '#3a67ab',\n    '#324c88',\n    '#29366b',\n    '#1e2354'\n];\n\nconst paletteSequentialBlueViolet = [\n    '#edf7e7',\n    '#c8e3d2',\n    '#91cdbf',\n    '#41b5ab',\n    '#218ba4',\n    '#145d94',\n    '#0c3183',\n    '#0d2d76',\n    '#0d2a6a',\n    '#0e265e',\n    '#0d2253',\n    '#0c1e47',\n    '#0b1a3c'\n];\n\nconst paletteSequentialTurquoise = [\n    '#e2ecf6',\n    '#cadfe6',\n    '#b1d3d6',\n    '#94c6c6',\n    '#74b9b6',\n    '#4caca6',\n    '#00a096',\n    '#008d89',\n    '#007b7c',\n    '#006a6f',\n    '#005963',\n    '#004a57',\n    '#063b4c'\n];\n\nconst paletteSequentialLightGreen = [\n    '#faf9de',\n    '#e9efc3',\n    '#d7e4a7',\n    '#c5d989',\n    '#b1ce6a',\n    '#9cc34c',\n    '#84b92a',\n    '#6fa32b',\n    '#5a8f2a',\n    '#477c29',\n    '#346b27',\n    '#205b24',\n    '#074d21'\n];\n\nconst paletteSequentialDarkGreen = [\n    '#eaf3e5',\n    '#c7d5be',\n    '#a3ba9a',\n    '#80a078',\n    '#5c885a',\n    '#357442',\n    '#00632e',\n    '#00592b',\n    '#004e27',\n    '#004423',\n    '#033a1e',\n    '#053019',\n    '#052613'\n];\n\nconst paletteSequentialGreenBrown = [\n    '#f7eccd',\n    '#d9cba6',\n    '#bcad82',\n    '#a29162',\n    '#887946',\n    '#716330',\n    '#5b501f',\n    '#51461d',\n    '#483d1b',\n    '#3f3418',\n    '#362b15',\n    '#2d2311',\n    '#231a0d'\n];\n\nconst paletteSequentialBrown = [\n    '#f7eccd',\n    '#eed3ab',\n    '#e4bb89',\n    '#dba269',\n    '#ad7446',\n    '#834d2c',\n    '#5e2f19',\n    '#552a18',\n    '#4c2516',\n    '#432113',\n    '#3a1c11',\n    '#32180f',\n    '#29130b'\n];\n\nconst paletteSequentialGrey = [\n    '#e5e8ea',\n    '#bdbfc3',\n    '#999a9f',\n    '#77797f',\n    '#595c64',\n    '#3e444c',\n    '#253038',\n    '#20282e',\n    '#1a2024',\n    '#15181b',\n    '#0e1112',\n    '#070808',\n    '#000000'\n];\n\nconst paletteSequentialVioletCb = [\n    '#f4f3f9',\n    '#e0dced',\n    '#cbc6e0',\n    '#b7b0d4',\n    '#948cbf',\n    '#706baa',\n    '#4d4e98',\n    '#484889',\n    '#42427a',\n    '#3d3c6c',\n    '#37365e',\n    '#313050',\n    '#2c2a44'\n];\n\nconst paletteSequentialPinkCb = [\n    '#fbe5ee',\n    '#f8ccd5',\n    '#f4b2bc',\n    '#f096a3',\n    '#d56976',\n    '#bc3f52',\n    '#a50f38',\n    '#951735',\n    '#851b31',\n    '#761d2e',\n    '#671e2a',\n    '#581d26',\n    '#4a1c22'\n];\n\nconst paletteSequentialBlueCb = [\n    '#eaf6fc',\n    '#cfe4f4',\n    '#cfe4f4',\n    '#91bfe3',\n    '#6999bb',\n    '#417797',\n    '#065b78',\n    '#11536b',\n    '#174b5f',\n    '#194354',\n    '#1a3b49',\n    '#1a343f',\n    '#192d35'\n];\n\nconst paletteSequentialGreenCb = [\n    '#fff7d0',\n    '#e9e09b',\n    '#d1ca62',\n    '#b7b623',\n    '#9e9e28',\n    '#88872a',\n    '#72722a',\n    '#676726',\n    '#5c5c23',\n    '#51511f',\n    '#47471b',\n    '#3d3d17',\n    '#333413'\n];\n\nconst paletteSequentialGreenBrownCb = [\n    '#f2edde',\n    '#d8d1c0',\n    '#bfb699',\n    '#a09778',\n    '#837b5a',\n    '#686141',\n    '#4f4b2c',\n    '#3e3e1f',\n    '#2e3313',\n    '#292d14',\n    '#232613',\n    '#1e2012',\n    '#191a10'\n];\n\nconst paletteDivergingSpectral1 = [\n    '#98141f',\n    '#ab332c',\n    '#bf5040',\n    '#d5705b',\n    '#e4a57f',\n    '#f3d6a6',\n    '#f5f2b8',\n    '#cfdbb1',\n    '#a4c4a9',\n    '#71ada1',\n    '#4e868f',\n    '#2e637d',\n    '#06456c'\n];\n\nconst paletteDivergingSpectral2 = [\n    '#d43d4f',\n    '#df564b',\n    '#eb6d45',\n    '#f08e53',\n    '#f8b96f',\n    '#fee08b',\n    '#f5f2b8',\n    '#d7e5b1',\n    '#b5d7aa',\n    '#8ec8a3',\n    '#6abda3',\n    '#4fa4b5',\n    '#3489be'\n];\n\nconst paletteDivergingSpectral3 = [\n    '#651035',\n    '#ae1143',\n    '#c9314b',\n    '#dd7257',\n    '#eeb27a',\n    '#feeb9e',\n    '#f5f2b8',\n    '#cadfba',\n    '#96cabb',\n    '#50b4bb',\n    '#3eaecc',\n    '#206791',\n    '#0c2c63'\n];\n\nconst paletteDivergingBrownTurquoise = [\n    '#3f3128',\n    '#683828',\n    '#933624',\n    '#d5705b',\n    '#db9c5e',\n    '#feeb9e',\n    '#f5f2b8',\n    '#cfdbb1',\n    '#a4c4a9',\n    '#71ada1',\n    '#628f85',\n    '#53746d',\n    '#475b57'\n];\n\nconst paletteDivergingOrangePink = [\n    '#e7511e',\n    '#eb6929',\n    '#ee7f37',\n    '#f29446',\n    '#f9c083',\n    '#ffe9c3',\n    '#ffeee3',\n    '#f9cfc1',\n    '#f3a9ab',\n    '#db6882',\n    '#c71360',\n    '#891953',\n    '#4b1c47'\n];\n\nconst paletteDivergingRedBlue = [\n    '#b2172b',\n    '#c4443e',\n    '#d76a5a',\n    '#ed937e',\n    '#f4b8a2',\n    '#fcdbc7',\n    '#efefef',\n    '#bfcad5',\n    '#8ba7bc',\n    '#4d87a5',\n    '#3c7ca0',\n    '#28729b',\n    '#036896'\n];\n\nconst paletteDivergingRedGrey = [\n    '#b2172b',\n    '#c54532',\n    '#da6c3b',\n    '#f29446',\n    '#f8bc67',\n    '#fee08b',\n    '#efece5',\n    '#c9c5c1',\n    '#a5a19f',\n    '#808080',\n    '#666666',\n    '#333333',\n    '#000000'\n];\n\nconst paletteDivergingOrangeViolet = [\n    '#98141f',\n    '#ab332c',\n    '#f9bc47',\n    '#fdcf66',\n    '#fede8d',\n    '#ffecb3',\n    '#f9eff6',\n    '#e8d0e3',\n    '#a4c4a9',\n    '#a973aa',\n    '#834f96',\n    '#622181',\n    '#402357'\n];\n\nconst paletteDivergingPurpleGreen = [\n    '#59194b',\n    '#85134b',\n    '#c71360',\n    '#db6882',\n    '#eba7a8',\n    '#fce0ca',\n    '#faefe1',\n    '#dbd9aa',\n    '#b9c26e',\n    '#94ad31',\n    '#728b2b',\n    '#546c25',\n    '#39521f'\n];\n\nconst paletteDivergingVioletGreen = [\n    '#55296e',\n    '#75408e',\n    '#8a5fa0',\n    '#a081b5',\n    '#beadcf',\n    '#ddd7e7',\n    '#eae8ed',\n    '#c1d4bc',\n    '#93be86',\n    '#58a951',\n    '#3c853e',\n    '#23662f',\n    '#084a22'\n];\n\nconst paletteDivergingRedGreen = [\n    '#b2172b',\n    '#c5403c',\n    '#d96453',\n    '#ef8972',\n    '#f6b49c',\n    '#fcdbc7',\n    '#f9ebde',\n    '#dad6a8',\n    '#b9c16d',\n    '#94ad31',\n    '#728b2b',\n    '#546c25',\n    '#39521f'\n];\n\nconst paletteDivergingBrownGreen = [\n    '#735146',\n    '#846454',\n    '#977a65',\n    '#aa9177',\n    '#c2ad91',\n    '#dbcaad',\n    '#edebd6',\n    '#c4d6aa',\n    '#94bf7c',\n    '#58a951',\n    '#3c853e',\n    '#23662f',\n    '#084a22'\n];\n\nconst paletteDivergingLightBrownTurquoise = [\n    '#8b5219',\n    '#a46821',\n    '#bf812c',\n    '#cfa151',\n    '#e2c489',\n    '#f6e8c3',\n    '#f5f1df',\n    '#cbdccc',\n    '#9cc6b9',\n    '#60afa6',\n    '#359790',\n    '#1d7d75',\n    '#00665e'\n];\n\n\nexport function category1() {\n    return scaleOrdinal().range(paletteCategory1);\n}\n\nexport function category2() {\n    return scaleOrdinal().range(paletteCategory2);\n}\n\nexport function category3() {\n    return scaleOrdinal().range(paletteCategory3);\n}\n\nexport function category4() {\n    return scaleOrdinal().range(paletteCategory4);\n}\n\nexport function category5() {\n    return scaleOrdinal().range(paletteCategory5);\n}\n\nexport function category6() {\n    return scaleOrdinal().range(paletteCategory6);\n}\n\nexport function category7() {\n    return scaleOrdinal().range(paletteCategory7);\n}\n\nexport function category8() {\n    return scaleOrdinal().range(paletteCategory8);\n}\n\nexport function sequentialYellow() {\n    return scaleQuantile().range(paletteSequentialYellow);\n}\n\nexport function sequentialRedOrange() {\n    return scaleQuantile().range(paletteSequentialRedOrange);\n}\n\nexport function sequentialRed() {\n    return scaleQuantile().range(paletteSequentialRed);\n}\n\nexport function sequentialPink() {\n    return scaleQuantile().range(paletteSequentialPink);\n}\n\nexport function sequentialPurplePink() {\n    return scaleQuantile().range(paletteSequentialPurplePink);\n}\n\nexport function sequentialPurple() {\n    return scaleQuantile().range(paletteSequentialPurple);\n}\n\nexport function sequentialBlue() {\n    return scaleQuantile().range(paletteSequentialBlue);\n}\n\nexport function sequentialLightBlue() {\n    return scaleQuantile().range(paletteSequentialLightBlue);\n}\n\nexport function sequentialBlueViolet() {\n    return scaleQuantile().range(paletteSequentialBlueViolet);\n}\n\nexport function sequentialTurquoise() {\n    return scaleQuantile().range(paletteSequentialTurquoise);\n}\n\nexport function sequentialLightGreen() {\n    return scaleQuantile().range(paletteSequentialLightGreen);\n}\n\nexport function sequentialDarkGreen() {\n    return scaleQuantile().range(paletteSequentialDarkGreen);\n}\n\nexport function sequentialGreenBrown() {\n    return scaleQuantile().range(paletteSequentialGreenBrown);\n}\n\nexport function sequentialBrown() {\n    return scaleQuantile().range(paletteSequentialBrown);\n}\n\nexport function sequentialGrey() {\n    return scaleQuantile().range(paletteSequentialGrey);\n}\n\nexport function sequentialVioletCb() {\n    return scaleQuantile().range(paletteSequentialVioletCb);\n}\n\nexport function sequentialPinkCb() {\n    return scaleQuantile().range(paletteSequentialPinkCb);\n}\n\nexport function sequentialBlueCb() {\n    return scaleQuantile().range(paletteSequentialBlueCb);\n}\n\nexport function sequentialGreenCb() {\n    return scaleQuantile().range(paletteSequentialGreenCb);\n}\n\nexport function sequentialGreenBrownCb() {\n    return scaleQuantile().range(paletteSequentialGreenBrownCb);\n}\n\nexport function diverging_spectral1() {\n    return scaleQuantile().range(paletteDivergingSpectral1);\n}\n\nexport function diverging_spectral2() {\n    return scaleQuantile().range(paletteDivergingSpectral2);\n}\n\nexport function diverging_spectral3() {\n    return scaleQuantile().range(paletteDivergingSpectral3);\n}\n\nexport function diverging_brown_turquoise() {\n    return scaleQuantile().range(paletteDivergingBrownTurquoise);\n}\n\nexport function diverging_orange_pink() {\n    return scaleQuantile().range(paletteDivergingOrangePink);\n}\n\nexport function diverging_red_blue() {\n    return scaleQuantile().range(paletteDivergingRedBlue);\n}\n\nexport function diverging_red_grey() {\n    return scaleQuantile().range(paletteDivergingRedGrey);\n}\n\nexport function diverging_orange_violet() {\n    return scaleQuantile().range(paletteDivergingOrangeViolet);\n}\n\nexport function diverging_purple_green() {\n    return scaleQuantile().range(paletteDivergingPurpleGreen);\n}\n\nexport function diverging_violet_green() {\n    return scaleQuantile().range(paletteDivergingVioletGreen);\n}\n\nexport function diverging_red_green() {\n    return scaleQuantile().range(paletteDivergingRedGreen);\n}\n\nexport function diverging_brown_green() {\n    return scaleQuantile().range(paletteDivergingBrownGreen);\n}\n\nexport function diverging_lightBrown_turquoise() {\n    return scaleQuantile().range(paletteDivergingLightBrownTurquoise);\n}","import * as Colors from '../colors';\n\nexport const defaults = {\n    selector: '#chart',\n    colorScale: Colors.category7(),\n    //Area\n    areaOpacity: 0.4,\n    //Axes\n    xAxisType: 'linear',\n    xAxisFormat: '',\n    xAxisLabel: null,\n    yAxisType: 'linear',\n    yAxisFormat: '',\n    yAxisLabel: null,\n    yAxisShow: true,\n    //margins\n    marginTop: 20,\n    marginRight: 250,\n    marginBottom: 130,\n    marginLeft: 150,\n    //markers\n    markerShape: 'ring',\n    markerSize: 5,\n    markerOutlineWidth: 2,\n    //Width & height\n    width: '100%', // %, auto, or numeric\n    height: 250,\n    legend: true,\n    //Events\n    onDown(d) {\n    },\n    onHover(d) {\n    },\n    onLeave(d) {\n    },\n    onClick(d) {\n    },\n    onUp(d) {\n    },\n    maxNumberOfElements: 100, // used by keepDrawing method to reduce the number of elements in the current chart\n};","import {\n  isNumeric, isPercentage\n} from './functions';\n\nimport { select } from 'd3';\n\nexport function calculateWidth(widthConfig, selector) {\n  if (widthConfig === 'auto') {\n    return select(selector)\n      .node()\n      .getBoundingClientRect()\n      .width;\n  }\n  else if (isNumeric(widthConfig)) {\n    return widthConfig;\n  }\n  else if (isPercentage(widthConfig)) {\n    let containerWidth, percentage;\n    containerWidth = select(selector)\n      .node()\n      .getBoundingClientRect()\n      .width;\n    percentage = widthConfig.split('%')[0];\n    return Math.round(percentage * containerWidth / 100);\n  } else {\n    throw Error('Unknow config width value: ' + widthConfig);\n  }\n}\n","import Chart from './Chart';\nimport SvgStrategyLinechart from '../svg/strategies/SvgStrategyLinechart';\nimport Config from '../Config';\nimport { defaults } from '../utils/defaults/linechart';\nimport { calculateWidth } from '../utils/screen';\nimport {copy} from '../utils/functions';\n\nclass Linechart extends Chart {\n\n    constructor(data: any, userConfig: any = {}) {\n        super(\n            new SvgStrategyLinechart(),\n            data,\n            userConfig\n        );\n    }\n\n    public keepDrawing(datum: any) {\n        var datumType = datum.constructor;\n\n        if (datumType === Array) {\n            this.data = this.data.concat(datum);\n        }\n        else {\n            this.data.push(datum);\n        }\n        this.draw(copy(this.data));\n    }\n\n\n    protected loadConfigFromUser(userData: { [key: string]: any; }): Config {\n        let config = new Config(),\n            //Selector\n            selector = userData['selector'] || defaults.selector,\n            //Margins \n            marginTop = userData['marginTop'] || defaults.marginTop,\n            marginLeft = userData['marginLeft'] || defaults.marginLeft,\n            marginRight = userData['marginRight'] || defaults.marginRight,\n            marginBottom = userData['marginBottom'] || defaults.marginBottom,\n            //Width & height\n            width = userData['width']\n                ? calculateWidth(userData['width'], selector) - marginLeft - marginRight\n                : calculateWidth(defaults.width, selector) - marginLeft - marginRight,\n            height = userData['height'] || defaults.height,\n            //Axis\n            xAxisType = userData['xAxisType'] || defaults.xAxisType,\n            xAxisFormat = userData['xAxisFormat'] || defaults.xAxisFormat,\n            xAxisLabel = userData['xAxisLabel'] || defaults.xAxisLabel,\n            yAxisType = userData['yAxisType'] || defaults.yAxisType,\n            yAxisFormat = userData['yAxisFormat'] || defaults.yAxisFormat,\n            yAxisLabel = userData['yAxisLabel'] || defaults.yAxisLabel,\n            yAxisShow = userData['yAxisShow'] || defaults.yAxisShow,\n            //Color\n            colorScale = userData['colorScale'] || defaults.colorScale,\n            //Events\n            onDown = userData['onDown'] || defaults.onDown,\n            onUp = userData['onUp'] || defaults.onUp,\n            onHover = userData['onHover'] || defaults.onHover,\n            onClick = userData['onClick'] || defaults.onClick,\n            onLeave = userData['onLeave'] || defaults.onLeave,\n            //Markers\n            markerOutlineWidth = userData['markerOutlineWidth'] || defaults.markerOutlineWidth,\n            markerShape = userData['markerShape'] || defaults.markerShape,\n            markerSize = (typeof userData['markerSize'] === 'undefined' || userData['markerSize'] < 0) ? defaults.markerSize : userData['markerSize'],\n            //Area\n            areaOpacity = (typeof userData['areaOpacity'] === 'undefined' || userData['markerSize'] < 0) ? defaults.areaOpacity : userData['areaOpacity'],\n\n            legend = (typeof userData['legend'] === 'undefined') ? defaults.legend : userData['legend'];\n\n        config.put('selector', selector);\n        config.put('marginTop', marginTop);\n        config.put('marginLeft', marginLeft);\n        config.put('marginRight', marginRight);\n        config.put('marginBottom', marginBottom);\n        config.put('width', width);\n        config.put('height', height);\n        config.put('xAxisType', xAxisType);\n        config.put('xAxisFormat', xAxisFormat);\n        config.put('xAxisLabel', xAxisLabel);\n        config.put('yAxisType', yAxisType);\n        config.put('yAxisFormat', yAxisFormat);\n        config.put('yAxisLabel', yAxisLabel);\n        config.put('yAxisShow', yAxisShow);\n        config.put('colorScale', colorScale);\n        config.put('onDown', onDown);\n        config.put('onUp', onUp);\n        config.put('onHover', onHover);\n        config.put('onClick', onClick);\n        config.put('onLeave', onLeave);\n        config.put('markerOutlineWidth', markerOutlineWidth);\n        config.put('markerShape', markerShape);\n        config.put('markerSize', markerSize);\n        config.put('areaOpacity', areaOpacity);\n        config.put('legend', legend);\n\n        return config;\n    }\n\n\n}\n\nexport default Linechart;","import Component from './Component';\nimport Config from '../../Config';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\nimport { simple2nested, simple2stacked } from '../../utils/dataTransformation';\n\nimport {\n  stack,\n  scaleBand,\n  map,\n  area,\n  selection,\n  nest\n} from 'd3';\n\n\nclass Barset extends Component {\n\n  private x: XAxis;\n  private y: YAxis;\n\n  constructor(x: XAxis, y: YAxis) {\n    super();\n    this.x = x;\n    this.y = y;\n  }\n\n  public render() {\n    //Do nothing, since points render only when new data is received.\n\n  }\n\n  public update(data: [any]) {\n    let bars = null,\n      stacked = this.config.get('stacked');\n\n    this.clean();\n\n    if (stacked) {\n      this.updateStacked(data);\n    } else {\n      this.updateGrouped(data);\n    }\n    bars = this.svg.selectAll('g.serie rect');\n    bars\n      .on('mousedown.user', this.config.get('onDown'))\n      .on('mouseup.user', this.config.get('onUp'))\n      .on('mouseleave.user', this.config.get('onLeave'))\n      .on('mouseover.user', this.config.get('onHover'))\n      .on('click.user', this.config.get('onClick'));\n  }\n\n  private updateStacked(data: [any]) {\n    let keys: [string] = map(data, (d) => d.key).keys();\n    let stack = this.config.get('stack');\n    data = stack.keys(keys)(simple2stacked(data));\n\n    let colorScale = this.config.get('colorScale'),\n      layer = this.svg.selectAll('.serie').data(data),\n      layerEnter = layer.enter().append('g'),\n      layerMerge = null,\n      bar = null,\n      barEnter = null,\n      barMerge = null,\n      x = this.x.xAxis.scale(),\n      y = this.y.yAxis.scale();\n\n    layerMerge = layer.merge(layerEnter)\n      .attr('class', 'serie')\n      .attr('fill', (d, i) => colorScale(i));\n\n    bar = layerMerge.selectAll('rect')\n      .data((d) => d);\n\n    barEnter = bar.enter().append('rect');\n\n    barMerge = bar.merge(barEnter)\n      .attr(\"x\", (d) => x(d.data.key))\n      .attr(\"y\", (d) => y(d[1]))\n      .attr(\"height\", (d) => y(d[0]) - y(d[1]))\n      .attr(\"width\", x.bandwidth());\n  }\n\n  private updateGrouped(data: [any]) {\n    let keys = map(data, (d) => d.key).keys(),\n      colorScale = this.config.get('colorScale'),\n      layer = this.svg.selectAll('.serie').data(data),\n      layerEnter = null,\n      layerMerge = null,\n      bar = null,\n      barEnter = null,\n      barMerge = null,\n      x = this.x.xAxis.scale(),\n      y = this.y.yAxis.scale(),\n      xGroup = scaleBand().domain(keys).range([0, x.bandwidth()]),\n      height = this.config.get('height');\n\n\n    data = simple2nested(data, 'x');\n\n    layer = this.svg.selectAll('.serie').data(data);\n\n    layerEnter = layer.enter().append('g')\n      .attr('transform', (d) => 'translate(' + x(d.key) + ')');\n\n    layerMerge = layer.merge(layerEnter)\n      .attr('class', 'serie')\n      .attr('transform', (d) => 'translate(' + x(d.key) + ')');\n\n    bar = layerMerge.selectAll('rect')\n      .data((d) => d.values);\n\n    barEnter = bar.enter().append('rect');\n\n    barMerge = bar.merge(barEnter)\n      .attr('width', xGroup.bandwidth())\n      .attr(\"x\", (d) => xGroup(d.key))\n      .attr('fill', (d, i) => colorScale(i))\n      .attr(\"y\", (d) => y(d.y))\n      .attr(\"height\", (d) => height - y(d.y));\n  }\n\n}\n\nexport default Barset;","import XYAxes from '../components/XYAxes';\nimport Barset from '../components/Barset';\nimport Legend from '../components/Legend';\n\nimport Config from '../../Config';\nimport SvgChart from '../base/SvgChart';\nimport { sortByField } from '../../utils/dataSorting';\nimport { convertByXYFormat } from '../../utils/dataTransformation';\n\nclass SvgStrategyBarchart extends SvgChart {\n    /**\n     * \n     * XY Axes. Horizontal and vertical references\n     * \n     * @private\n     * @type {XYAxes}\n     * @memberOf SvgStrategyBarchart\n     */\n    private axes: XYAxes;\n\n    /**\n     * \n     * Set of bars. The numbers of bars depends on data. Every draw() call lines are automatically updated.\n     * @private\n     * @type {Lineset}\n     * @memberOf SvgStrategyBarchart\n    \n     */\n    private bars: Barset;\n\n\n    private legend: Legend;\n\n\n    constructor() {\n        super();\n        this.axes = new XYAxes();\n        this.bars = new Barset(this.axes.x, this.axes.y);\n    }\n\n    public draw(data: [{}]) {\n        let xAxisFormat = this.config.get('xAxisFormat'),\n            xAxisType = this.config.get('xAxisType'),\n            yAxisFormat = this.config.get('yAxisFormat'),\n            yAxisType = this.config.get('yAxisType');\n\n        convertByXYFormat(data, xAxisFormat, xAxisType, yAxisFormat, yAxisType);\n        sortByField(data, 'x');\n\n        this.container.updateComponents(data);\n    }\n\n\n    public initialize(): void {\n        super.initialize();\n        let legend = this.config.get('legend');\n        this.container.add(this.axes).add(this.bars);\n\n        if (legend) {\n            this.legend = new Legend();\n            this.container.add(this.legend);\n        }\n    }\n}\n\nexport default SvgStrategyBarchart;","import * as Colors from '../colors';\n\nexport const defaults = {\n    selector: '#chart',\n    colorScale: Colors.category5(),\n    //Stacked\n    stacked: true,\n    //Axes\n    xAxisType: 'categorical',\n    xAxisFormat: '',\n    xAxisLabel: null,\n    yAxisType: 'linear',\n    yAxisFormat: '',\n    yAxisLabel: null,\n    yAxisShow: true,\n    //margins\n    marginTop: 20,\n    marginRight: 250,\n    marginBottom: 130,\n    marginLeft: 150,\n    //width & height\n    width: '100%',\n    height: 350,\n    legend: true,\n    //Events\n    onDown(d) {\n    },\n    onHover(d) {\n    },\n    onLeave(d) {\n    },\n    onClick(d) {\n    },\n    onUp(d){\n    }\n};","import Chart from './Chart';\nimport SvgStrategyBarchart from '../svg/strategies/SvgStrategyBarchart';\nimport Config from '../Config';\nimport { defaults } from '../utils/defaults/barchart';\nimport { calculateWidth } from '../utils/screen';\nimport {copy} from '../utils/functions';\nimport {stack as d3stack} from 'd3';\n\nclass Barchart extends Chart {\n\n    constructor(data: any, userConfig: any = {}) {\n        super(\n            new SvgStrategyBarchart(),\n            data,\n            userConfig\n        );\n    }\n\n    fire(event: string, data: string) {//TODO: improve this section\n        if (event === 'transition') {\n            if (data === 'grouped') {\n                this.config.put('stacked', false);\n            }\n            else if (data === 'stacked') {\n                this.config.put('stacked', true);\n            }\n            this.draw();\n        }\n    }\n\n    public keepDrawing(datum: any) {\n        let datumType = datum.constructor;\n        if (datumType === Array) {\n            this.data = datum;\n        }\n        else {\n            for (let i = 0; i < this.data.length; i++) {\n                var d = this.data[i];\n                if (d['x'] === datum['x']) {\n                    this.data[i] = datum;\n                    break;\n                }\n            }\n        }\n        this.draw(copy(this.data));\n    }\n\n\n\n    protected loadConfigFromUser(userData: { [key: string]: any; }): Config {\n        let config = new Config(),\n            //Selector\n            selector = userData['selector'] || defaults.selector,\n            //Margins \n            marginTop = userData['marginTop'] || defaults.marginTop,\n            marginLeft = userData['marginLeft'] || defaults.marginLeft,\n            marginRight = userData['marginRight'] || defaults.marginRight,\n            marginBottom = userData['marginBottom'] || defaults.marginBottom,\n            //Width & height\n            width = userData['width']\n                ? calculateWidth(userData['width'], selector) - marginLeft - marginRight\n                : calculateWidth(defaults.width, selector) - marginLeft - marginRight,\n            height = userData['height'] || defaults.height,\n            //Axis\n            xAxisType = userData['xAxisType'] || defaults.xAxisType,\n            xAxisFormat = userData['xAxisFormat'] || defaults.xAxisFormat,\n            xAxisLabel = userData['xAxisLabel'] || defaults.xAxisLabel,\n            yAxisType = userData['yAxisType'] || defaults.yAxisType,\n            yAxisFormat = userData['yAxisFormat'] || defaults.yAxisFormat,\n            yAxisLabel = userData['yAxisLabel'] || defaults.yAxisLabel,\n            yAxisShow = userData['yAxisShow'] || defaults.yAxisShow,\n\n            //Color\n            colorScale = userData['colorScale'] || defaults.colorScale,\n            //Events\n            onDown = userData['onDown'] || defaults.onDown,\n            onUp = userData['onUp'] || defaults.onUp,\n            onHover = userData['onHover'] || defaults.onHover,\n            onClick = userData['onClick'] || defaults.onClick,\n            onLeave = userData['onLeave'] || defaults.onLeave,\n\n            stacked = (typeof userData['stacked'] === 'undefined') ? defaults.stacked : userData['stacked'],\n            stack = d3stack().value((d, k) => d.value[k]),\n\n            legend = (typeof userData['legend'] === 'undefined') ? defaults.legend : userData['legend'];\n\n        config.put('selector', selector);\n        config.put('marginTop', marginTop);\n        config.put('marginLeft', marginLeft);\n        config.put('marginRight', marginRight);\n        config.put('marginBottom', marginBottom);\n        config.put('width', width);\n        config.put('height', height);\n        config.put('xAxisType', xAxisType);\n        config.put('xAxisFormat', xAxisFormat);\n        config.put('xAxisLabel', xAxisLabel);\n        config.put('yAxisType', yAxisType);\n        config.put('yAxisFormat', yAxisFormat);\n        config.put('yAxisLabel', yAxisLabel);\n        config.put('yAxisShow', yAxisShow);\n        config.put('colorScale', colorScale);\n        config.put('onDown', onDown);\n        config.put('onUp', onUp);\n        config.put('onHover', onHover);\n        config.put('onClick', onClick);\n        config.put('onLeave', onLeave);\n        config.put('legend', legend);\n        config.put('stacked', stacked);\n        config.put('stack', stack);\n\n        return config;\n    }\n\n\n}\n\nexport default Barchart;","import {deg2rad} from '../../utils/functions';\nimport Component from './Component';\n\nimport {\n    scaleLinear,\n    arc as d3arc,\n    range as d3range\n} from 'd3';\n\nclass Dial extends Component {\n\n    constructor() {\n        super();\n    }\n\n\n    public render() {\n        let labels = null,\n            invertColorScale = this.config.get('invertColorScale'),\n            colorScale = this.config.get('colorScale'),\n            width = this.config.get('width'),\n            height = this.config.get('height'),\n            ringWidth = this.config.get('ringWidth'),\n            ringMargin = this.config.get('ringMargin'),\n            ticks = this.config.get('ticks'),\n            minAngle = this.config.get('minAngle'),\n            maxAngle = this.config.get('maxAngle'),\n            minLevel = this.config.get('minLevel'),\n            maxLevel = this.config.get('maxLevel'),\n            labelInset = this.config.get('labelInset'),\n            scale = scaleLinear()\n                .domain([minLevel, maxLevel])\n                .range([0, 1]),\n            scaleMarkers = scale.ticks(ticks),\n\n            range = maxAngle - minAngle,\n            r = ((width > height) ?\n                height : width\n            ) / 2,\n            translation = (() => 'translate(' + r + ',' + r + ')'),\n            tickData = d3range(ticks).map(() => 1 / ticks),\n            arc = d3arc()\n                .innerRadius(r - ringWidth - ringMargin)\n                .outerRadius(r - ringMargin)\n                .startAngle((d, i) => deg2rad(minAngle + ((d * i) * range)))\n                .endAngle((d, i) => deg2rad(minAngle + ((d * (i + 1)) * range)));\n                \n         colorScale.domain([0,1]);\n\n        // Append the ring\n        let arcs = this.svg.append('g')\n            .attr('class', 'arc')\n            .attr('transform', translation);\n\n        // Append the ring sectors\n        let arcPaths = arcs.selectAll('path')\n            .data(tickData)\n            .enter().append('path')\n            // ID for textPath linking\n            .attr('id', (d, i) => 'sector-' + i)\n            .attr('d', arc);\n\n        // Fill colors\n        arcPaths.attr('fill', (d, i) => colorScale(invertColorScale\n            ? (1 - d * i)\n            : (d * i))\n        );\n\n        // Apend the scale labels\n        labels = this.svg.append('g')\n            .attr('class', 'labels')\n            .attr('transform', translation);\n\n        // // Append scale marker labels\n        labels.selectAll('text')\n            .data(scaleMarkers)\n            .enter().append('text')\n            .attr('transform', (d) => {\n                let ratio = scale(d);\n                let newAngle = minAngle + (ratio * range);\n                return 'rotate(' + newAngle + ') translate(0,' + (labelInset - r) + ')';\n            })\n            .text((d) => d)\n            .style('text-anchor', 'middle')\n            .style('font', '18px Montserrat, sans-serif');\n    }\n\n    public update() {\n\n    }\n\n}\n\nexport default Dial;","import {deg2rad} from '../../utils/functions';\nimport Component from './Component';\n\nimport {\n    scaleLinear,\n    arc as d3arc,\n    range as d3range\n} from 'd3';\n\nclass DialNeedle extends Component {\n\n    constructor() {\n        super();\n    }\n\n    public render() {\n        let labels = null,\n            invertColorScale = this.config.get('invertColorScale'),\n            colorScale = this.config.get('colorScale'),\n            width = this.config.get('width'),\n            height = this.config.get('height'),\n            ringWidth = this.config.get('ringWidth'),\n            ringMargin = this.config.get('ringMargin'),\n            ticks = this.config.get('ticks'),\n            minAngle = this.config.get('minAngle'),\n            maxAngle = this.config.get('maxAngle'),\n            minLevel = this.config.get('minLevel'),\n            maxLevel = this.config.get('maxLevel'),\n            labelInset = this.config.get('labelInset'),\n            needleNutRadius = this.config.get('needleNutRadius'),\n            needleLenghtRatio = this.config.get('needleLenghtRatio'),\n            scale = scaleLinear()\n                .domain([minLevel, maxLevel])\n                .range([0, 1]),\n            scaleMarkers = scale.ticks(ticks),\n\n            range = maxAngle - minAngle,\n            r = ((width > height) ?\n                height : width\n            ) / 2,\n            needleLen = needleLenghtRatio * (r),\n\n            translation = (() => 'translate(' + r + ',' + r + ')'),\n            tickData = d3range(ticks).map(() => 1 / ticks),\n            arc = d3arc()\n                .innerRadius(r - ringWidth - ringMargin)\n                .outerRadius(r - ringMargin)\n                .startAngle((d, i) => deg2rad(minAngle + ((d * i) * range)))\n                .endAngle((d, i) => deg2rad(minAngle + ((d * (i + 1)) * range))),\n\n            angleScale = scaleLinear()\n                .domain([minLevel, maxLevel])\n                .range([90 + minAngle, 90 + maxAngle]);\n\n        // Update the needle\n        this.svg.append('path')\n            .attr('class', 'needle')\n            .datum(0)\n            .attr('transform', (d) => `translate(${r}, ${r}) rotate(${angleScale(d) - 90})`)\n            .attr('d', `M ${0 - needleNutRadius} ${0} L ${0} ${0 - needleLen} L ${needleNutRadius} ${0}`)\n            .style('fill', '#666666');\n\n        // Append needle nut\n        this.svg.append('circle')\n            .attr('class', 'needle')\n            .attr('transform', translation)\n            .attr('cx', 0)\n            .attr('cy', 0)\n            .attr('r', needleNutRadius)\n            .style('fill', '#666666');\n    }\n\n    public update(data: [any]) {\n        let datum = data[data.length - 1],\n            width = this.config.get('width'),\n            height = this.config.get('height'),\n            needleNutRadius = this.config.get('needleNutRadius'),\n            needleLenghtRatio = this.config.get('needleLenghtRatio'),\n            minAngle = this.config.get('minAngle'),\n            maxAngle = this.config.get('maxAngle'),\n            minLevel = this.config.get('minLevel'),\n            maxLevel = this.config.get('maxLevel'),\n            r = ((width > height) ?\n                height : width\n            ) / 2,\n            needleLen = needleLenghtRatio * (r),\n            angleScale = scaleLinear()\n                .domain([minLevel, maxLevel])\n                .range([90 + minAngle, 90 + maxAngle]);\n\n        this.svg.select('.needle')\n            .transition()\n            .attr('transform', (d) => `translate(${r}, ${r}) rotate(${angleScale(datum.value) - 90})`)\n            .attr('d', `M ${0 - needleNutRadius} ${0} L ${0} ${0 - needleLen} L ${needleNutRadius} ${0}`);\n    }\n\n}\n\nexport default DialNeedle;","import Component from \"./Component\";\n\nclass TextIndicator extends Component {\n\n    constructor() {}\n\n    update(data: [any]): void {\n        let datum = data[data.length - 1];\n\n        this.svg.select('.value')\n            .text(datum.value);\n        this.svg.select('.label')\n            .text(datum.label);\n    }\n\n    render(): void {\n        let translation = this.config.get('textIndicatorTranslation');\n        let indicator = this.svg.append('g')\n            .attr('class', 'text-indicator')\n            .attr('pointer-events', 'none')\n            .style('text-anchor', 'middle')\n            .style('alignment-baseline', 'central');\n\n        if (translation) {\n            indicator.attr('transform', translation);\n        }\n\n        indicator.append('text')\n            .attr('class', 'value')\n            .attr('x', 0)\n            .attr('y', 0)\n            .attr('pointer-events', 'none')\n            .text('0')\n            .style('font', '48px Montserrat, sans-serif')\n            .style('text-anchor', 'middle');\n\n        indicator.append('text')\n            .attr('class', 'label')\n            .attr('x', 0)\n            .attr('y', 0)\n            .attr('pointer-events', 'none')\n            .text('')\n            .style('font', '24px Montserrat, sans-serif')\n            .style('transform', 'translate(0, 1.5em')\n            .style('text-anchor', 'middle');\n    }\n}\n\nexport default TextIndicator;","\nimport Config from '../../Config';\nimport SvgChart from '../base/SvgChart';\nimport { sortByField } from '../../utils/dataSorting';\nimport { convertByXYFormat } from '../../utils/dataTransformation';\nimport Dial from '../components/Dial';\nimport DialNeedle from '../components/DialNeedle';\nimport TextIndicator from \"../components/TextIndicator\";\n\nclass SvgStrategyGauge extends SvgChart {\n\n    private dial: Dial;\n    private dialNeedle: DialNeedle;\n    private textIndicator: TextIndicator;\n\n\n    constructor() {\n        super();\n        this.dial = new Dial();\n        this.dialNeedle = new DialNeedle();\n        this.textIndicator = new TextIndicator();\n    }\n\n    public draw(data: [{}]) {\n        this.container.updateComponents(data);\n    }\n\n\n    public initialize(): void {\n        super.initialize();\n\n        this.container.add(this.dial).add(this.dialNeedle);\n        if (this.config.get('numericIndicator')) {\n            let width = this.config.get('width'),\n                height = this.config.get('height');\n            let r = (\n                    (width > height) ? height : width\n                ) / 2;\n            let indicatorOffset = r + 75;\n            this.config.put('textIndicatorTranslation', 'translate(' + r + ',' + indicatorOffset + ')');\n            this.container.add(this.textIndicator);\n        }\n    }\n}\n\nexport default SvgStrategyGauge;","import * as Colors from '../colors';\n\nexport const defaults =  {\n    selector: '#chart',\n    colorScale: Colors.diverging_spectral2(),\n    invertColorScale: true,\n    minLevel: 0,\n    maxLevel: 100,\n    minAngle: -90,\n    maxAngle: 90,\n    ringWidth: 50,\n    ringMargin: 20,\n    labelInset: 10,\n    needleNutRadius: 25,\n    needleLenghtRatio: 0.8,\n    numericIndicator: true,\n    label: 'km/h',\n    //margins\n    marginTop: 20,\n    marginRight: 250,\n    marginBottom: 30,\n    marginLeft: 50,\n    //Width & height\n    width: '50%', // %, auto, or numeric\n    height: 250,\n    ticks: 10, // ticks for y dial.\n};","import Chart from './Chart';\nimport SvgStrategyGauge from '../svg/strategies/SvgStrategyGauge';\nimport Config from '../Config';\nimport { defaults } from '../utils/defaults/gauge';\nimport { calculateWidth } from '../utils/screen';\n\n\nclass Gauge extends Chart {\n\n    constructor(data: any, userConfig: any = {}) {\n        super(\n            new SvgStrategyGauge(),\n            data,\n            userConfig\n        );\n    }\n\n    protected loadConfigFromUser(userData: { [key: string]: any; }): Config {\n        let config = new Config(),\n            //Selector\n            selector = userData['selector'] || defaults.selector,\n            //Margins \n            marginTop = userData['marginTop'] || defaults.marginTop,\n            marginLeft = userData['marginLeft'] || defaults.marginLeft,\n            marginRight = userData['marginRight'] || defaults.marginRight,\n            marginBottom = userData['marginBottom'] || defaults.marginBottom,\n            //Width & height\n            width = userData['width']\n                ? calculateWidth(userData['width'], selector) - marginLeft - marginRight\n                : calculateWidth(defaults.width, selector) - marginLeft - marginRight,\n            height = userData['height'] || defaults.height,\n            //Color\n            colorScale = userData['colorScale'] || defaults.colorScale,\n            invertColorScale = (typeof userData['invertColorScale'] === 'undefined') ? defaults.invertColorScale : userData['invertColorScale'],\n            //Gauge params\n            minLevel = userData['minLevel'] || defaults.minLevel,\n            maxLevel = userData['maxLevel'] || defaults.maxLevel,\n            minAngle = userData['minAngle'] || defaults.minAngle,\n            maxAngle = userData['maxAngle'] || defaults.maxAngle,\n            ringWidth = userData['ringWidth'] || defaults.ringWidth,\n            ringMargin = userData['ringMargin'] || defaults.ringMargin,\n            labelInset = userData['labelInset'] || defaults.labelInset,\n            needleNutRadius = userData['needleNutRadius'] || defaults.needleNutRadius,\n            needleLenghtRatio = userData['needleLenghtRatio'] || defaults.needleLenghtRatio,\n            numericIndicator = (typeof userData['numericIndicator'] === 'undefined') ? defaults.numericIndicator : userData['numericIndicator'],\n            label = userData['label'] || defaults.label,\n            ticks = userData['ticks'] || defaults.ticks;\n\n        config.put('selector', selector);\n        config.put('marginTop', marginTop);\n        config.put('marginLeft', marginLeft);\n        config.put('marginRight', marginRight);\n        config.put('marginBottom', marginBottom);\n        config.put('width', width);\n        config.put('height', height);\n        config.put('colorScale', colorScale);\n        config.put('invertColorScale', invertColorScale);\n\n        config.put('minLevel', minLevel);\n        config.put('maxLevel', maxLevel);\n        config.put('minAngle', minAngle);\n        config.put('maxAngle', maxAngle);\n        config.put('ringWidth', ringWidth);\n        config.put('ringMargin', ringMargin);\n        config.put('labelInset', labelInset);\n        config.put('needleNutRadius', needleNutRadius);\n        config.put('needleLenghtRatio', needleLenghtRatio);\n        config.put('numericIndicator', numericIndicator);\n        config.put('label', label);\n        config.put('ticks', ticks);\n\n        return config;\n    }\n\n    public keepDrawing(datum: any) {\n        this.data = [datum[0]];\n        super.draw();\n    }\n\n\n}\n\nexport default Gauge;","import Component from \"./Component\";\nimport YAxis from \"./YAxis\";\nimport XAxis from \"./XAxis\";\nimport {select,\n    symbol,\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolTriangle,\n    symbolWye\n} from \"d3\";\n\nclass CanvasPointset extends Component {\n\n    private x: XAxis;\n    private y: YAxis;\n\n    constructor(x: XAxis, y: YAxis) {\n        super();\n        this.x = x;\n        this.y = y;\n    }\n\n    public update(data: [any]): void {\n        let canvas = select(this.config.get('selector')).append('canvas')\n            .attr('id', 'point-set-canvas')\n            .attr('width', this.config.get('width'))\n            .attr('height', this.config.get('height'))\n            .style('position', 'absolute')\n            .style('z-index', 2)\n            .style('transform', `translate(${this.config.get('marginLeft')}px, ${this.config.get('marginTop')}px)`);\n\n        let markerShape = this.config.get('markerShape'),\n            markerSize = this.config.get('markerSize'),\n            colorScale = this.config.get('colorScale'),\n            points = null,\n            series = null,\n            dataContainer = null;\n\n        let canvasCtx = canvas.node().getContext('2d');\n\n        let shape = symbol()\n            .size(markerSize)\n            .context(canvasCtx);\n\n        switch (markerShape) {\n            case 'dot':\n                shape.type(symbolCircle);\n                break;\n            case 'ring':\n                shape.type(symbolCircle);\n                break;\n            case 'cross':\n                shape.type(symbolCross);\n                break;\n            case 'diamond':\n                shape.type(symbolDiamond);\n                break;\n            case 'square':\n                shape.type(symbolSquare);\n                break;\n            case 'star':\n                shape.type(symbolStar);\n                break;\n            case 'triangle':\n                shape.type(symbolTriangle);\n                break;\n            case 'wye':\n                shape.type(symbolWye);\n                break;\n            case 'circle':\n                shape.type(symbolCircle);\n                break;\n            default:\n                shape.type(symbolCircle);\n        }\n\n        // Custom DOM element, this won't be rendered\n        dataContainer = this.svg.append('proteic');\n        series = dataContainer.selectAll('proteic.g.points');\n\n        series\n            .data(data, (d) => d.key)\n            .enter()\n            .call((s) => {\n                let self = this;\n                console.log(s);\n                s.each(function (d) {\n                    canvasCtx.save();\n                    canvasCtx.translate(self.x.xAxis.scale()(d.x), self.y.yAxis.scale()(d.y));\n                    canvasCtx.beginPath();\n                    canvasCtx.strokeStyle = colorScale(d.key);\n                    canvasCtx.fillStyle = colorScale(d.key);\n                    shape();\n                    canvasCtx.closePath();\n                    canvasCtx.stroke();\n                    if (markerShape !== 'ring') {\n                        canvasCtx.fill();\n                    }\n                    canvasCtx.restore();\n                });\n            });\n    }\n\n    public render(): void {\n    }\n}\n\nexport default CanvasPointset;\n","import XYAxes from '../components/XYAxes';\nimport Pointset from '../components/Pointset';\nimport Legend from '../components/Legend';\n\nimport Config from '../../Config';\nimport SvgChart from '../base/SvgChart';\nimport { sortByField } from '../../utils/dataSorting';\nimport { convertByXYFormat } from '../../utils/dataTransformation';\nimport CanvasPointset from \"../components/CanvasPointset\";\n\nclass SvgStrategyScatterplot extends SvgChart {\n    /**\n     * \n     * XY Axes. Horizontal and vertical references\n     * \n     * @private\n     * @type {XYAxes}\n     * @memberOf SvgStrategyScatterplot\n     */\n    private axes: XYAxes;\n\n    /**\n     * \n     * Set of points\n     * \n     * @private\n     * @type {Pointset}\n     * @memberOf SvgStrategyScatterplot\n     */\n    private markers: Pointset;\n\n    /**\n     *\n     * Set of points\n     *\n     * @private\n     * @type {CanvasPointset}\n     * @memberOf SvgStrategyScatterplot\n     */\n    private canvasMarkers: CanvasPointset;\n\n    private legend: Legend;\n\n    constructor() {\n        super();\n        this.axes = new XYAxes();\n        this.markers = new Pointset(this.axes.x, this.axes.y);\n        this.canvasMarkers = new CanvasPointset(this.axes.x, this.axes.y);\n    }\n\n    public draw(data: [{}]) {\n        let xAxisFormat = this.config.get('xAxisFormat'),\n            xAxisType = this.config.get('xAxisType'),\n            yAxisFormat = this.config.get('yAxisFormat'),\n            yAxisType = this.config.get('yAxisType');\n\n        convertByXYFormat(data, xAxisFormat, xAxisType, yAxisFormat, yAxisType);\n        sortByField(data, 'x');\n\n        this.container.updateComponents(data);\n    }\n\n\n    public initialize(): void {\n        super.initialize();\n        let legend = this.config.get('legend');\n\n        this.container.add(this.axes);\n\n        if (this.config.get('canvas')) {\n            this.container.add(this.canvasMarkers);\n        } else {\n            this.container.add(this.markers);\n        }\n\n        if (legend) {\n            this.legend = new Legend();\n            this.container.add(this.legend);\n        }\n    }\n}\n\nexport default SvgStrategyScatterplot;","import * as Colors from '../colors';\n\nexport const defaults = {\n    selector: '#chart',\n    colorScale: Colors.category7(),\n\n    //Axes\n    xAxisType: 'linear',\n    xAxisFormat: '.1f',\n    xAxisLabel: '',\n    yAxisType: 'linear',\n    yAxisFormat: '.1f',\n    yAxisLabel: '',\n    yAxisShow: true,\n    //margins\n    marginTop: 20,\n    marginRight: 250,\n    marginBottom: 130,\n    marginLeft: 150,\n    //markers\n    markerShape: 'dot',\n    markerSize: 3,\n    //Width & height\n    width: '100%', // %, auto, or numeric\n    height: 250,\n    legend: true,\n    //Events\n    onDown(d) {\n    },\n    onHover(d) {\n    },\n    onLeave(d) {\n    },\n    onClick(d) {\n    },\n    onUp(d) {\n\n    },\n    maxNumberOfElements: 100, // used by keepDrawing method to reduce the number of elements in the current chart\n    canvas: false\n};","import Chart from './Chart';\nimport SvgStrategyScatterplot from '../svg/strategies/SvgStrategyScatterplot';\nimport Config from '../Config';\nimport { defaults } from '../utils/defaults/scatterplot';\nimport { calculateWidth } from '../utils/screen';\nimport {copy} from '../utils/functions';\n\n\nclass Scatterplot extends Chart {\n\n    constructor(data: any, userConfig: any = {}) {\n        super(\n            new SvgStrategyScatterplot(),\n            data,\n            userConfig\n        );\n    }\n\n\n    public keepDrawing(datum: any) {\n        var datumType = datum.constructor;\n\n        if (datumType === Array) {\n            if (this.data) {\n                this.data = this.data.concat(datum);\n            } else {\n                this.data = datum;\n            }\n        }\n        else {\n            this.data.push(datum);\n        }\n        this.draw(copy(this.data));\n    }\n    \n    protected loadConfigFromUser(userData: { [key: string]: any; }): Config {\n        let config = new Config(),\n            //Selector\n            selector = userData['selector'] || defaults.selector,\n            //Margins \n            marginTop = userData['marginTop'] || defaults.marginTop,\n            marginLeft = userData['marginLeft'] || defaults.marginLeft,\n            marginRight = userData['marginRight'] || defaults.marginRight,\n            marginBottom = userData['marginBottom'] || defaults.marginBottom,\n            //Width & height\n            width = userData['width']\n                ? calculateWidth(userData['width'], selector) - marginLeft - marginRight\n                : calculateWidth(defaults.width, selector) - marginLeft - marginRight,\n            height = userData['height'] || defaults.height,\n            //Axis\n            xAxisType = userData['xAxisType'] || defaults.xAxisType,\n            xAxisFormat = userData['xAxisFormat'] || defaults.xAxisFormat,\n            xAxisLabel = userData['xAxisLabel'] || defaults.xAxisLabel,\n            yAxisType = userData['yAxisType'] || defaults.yAxisType,\n            yAxisFormat = userData['yAxisFormat'] || defaults.yAxisFormat,\n            yAxisLabel = userData['yAxisLabel'] || defaults.yAxisLabel,\n            yAxisShow = userData['yAxisShow'] || defaults.yAxisShow,\n            //Color\n            colorScale = userData['colorScale'] || defaults.colorScale,\n            //Events\n            onDown = userData['onDown'] || defaults.onDown,\n            onUp = userData['onUp'] || defaults.onUp,\n            onHover = userData['onHover'] || defaults.onHover,\n            onClick = userData['onClick'] || defaults.onClick,\n            onLeave = userData['onLeave'] || defaults.onLeave,\n            //Markers\n            markerShape = userData['markerShape'] || defaults.markerShape,\n            markerSize = (typeof userData['markerSize'] === 'undefined' || userData['markerSize'] < 0) ? defaults.markerSize : userData['markerSize'],\n\n            legend = (typeof userData['legend'] === 'undefined') ? defaults.legend : userData['legend'],\n\n            canvas = userData['canvas'] || defaults.canvas;\n\n        config.put('selector', selector);\n        config.put('marginTop', marginTop);\n        config.put('marginLeft', marginLeft);\n        config.put('marginRight', marginRight);\n        config.put('marginBottom', marginBottom);\n        config.put('width', width);\n        config.put('height', height);\n        config.put('xAxisType', xAxisType);\n        config.put('xAxisFormat', xAxisFormat);\n        config.put('xAxisLabel', xAxisLabel);\n        config.put('yAxisType', yAxisType);\n        config.put('yAxisFormat', yAxisFormat);\n        config.put('yAxisLabel', yAxisLabel);\n        config.put('yAxisShow', yAxisShow);\n        config.put('colorScale', colorScale);\n        config.put('onDown', onDown);\n        config.put('onUp', onUp);\n        config.put('onHover', onHover);\n        config.put('onClick', onClick);\n        config.put('onLeave', onLeave);\n        config.put('markerShape', markerShape);\n        config.put('markerSize', markerSize);\n        config.put('legend', legend);\n        config.put('canvas', canvas);\n\n        return config;\n    }\n\n\n}\n\nexport default Scatterplot;","\nimport Component from './Component';\nimport XYAxes from './XYAxes';\nimport Config from '../../Config';\nimport {simple2stacked} from '../../utils/dataTransformation';\n\nimport {\n    area,\n    curveCardinal,\n    nest,\n    map,\n    stackOrderInsideOut,\n    stackOffsetWiggle,\n    stack as d3Stack\n} from 'd3';\n\nclass Streamset extends Component {\n\n    private xyAxes: XYAxes;\n    private areaGenerator: any;\n\n    constructor(xyAxes: XYAxes) {\n        super();\n        this.xyAxes = xyAxes;\n        this.areaGenerator = area()\n            .curve(curveCardinal)\n            .y0((d) => this.xyAxes.y.yAxis.scale()(d[0]))\n            .y1((d) => this.xyAxes.y.yAxis.scale()(d[1]));\n    }\n\n\n    public render(): void {\n        //Do nothing, since lines render only when new data is received.\n    }\n\n    public update(data: [any]): void {\n        this.clean();\n        let colorScale = this.config.get('colorScale'),\n            onDown = this.config.get('onDown'),\n            onUp = this.config.get('onUp'),\n            onLeave = this.config.get('onLeave'),\n            onHover = this.config.get('onHover'),\n            onClick = this.config.get('onClick'),\n            keys = map(data, (d) => d.key).keys(),\n            data4stack = simple2stacked(data),\n            stack = this.config.get('stack'),\n            dataSeries = stack(data4stack),\n            series = null;\n\n        this.areaGenerator.x((d) => this.xyAxes.x.xAxis.scale()((new Date(d.data.key))));\n\n        series = this.svg.selectAll('.serie')\n            .data(dataSeries)\n            .enter()\n            .append('g')\n            .attr('class', 'serie')\n            .style('stroke', (d, i) => colorScale(i));\n\n        series\n            .append('path')\n            .attr('class', 'layer')\n            .attr('d', this.areaGenerator)\n            .style('fill', (d, i) => colorScale(i));\n\n\n        series.exit().remove();\n\n        series\n            .attr('opacity', 1)\n            .on('mousedown.user', onDown)\n            .on('mouseup.user', onUp)\n            .on('mouseleave.user', onLeave)\n            .on('mouseover.user', onHover)\n            .on('click.user', onClick);\n    }\n\n}\n\nexport default Streamset;","import XYAxes from '../components/XYAxes';\nimport Legend from '../components/Legend';\nimport Streamset from '../components/Streamset';\n\nimport Config from '../../Config';\nimport SvgChart from '../base/SvgChart';\nimport { sortByField } from '../../utils/dataSorting';\nimport { convertPropretiesToTimeFormat } from '../../utils/dataTransformation';\n\nclass SvgStrategyStreamgraph extends SvgChart {\n    /**\n     * \n     * XY Axes. Horizontal and vertical references\n     * \n     * @private\n     * @type {XYAxes}\n     * @memberOf SvgStrategyStreamgraph\n     */\n    private axes: XYAxes;\n\n    private legend: Legend;\n\n    private streams: Streamset;\n\n\n    constructor() {\n        super();\n        this.axes = new XYAxes();\n        this.streams = new Streamset(this.axes);\n    }\n\n    public draw(data: [{}]) {\n        let xAxisFormat = this.config.get('xAxisFormat'),\n            xAxisType = this.config.get('xAxisType'),\n            yAxisFormat = this.config.get('yAxisFormat'),\n            yAxisType = this.config.get('yAxisType');\n            \n        convertPropretiesToTimeFormat(data, ['x'], xAxisFormat);     \n\n        sortByField(data, 'x');\n\n        this.container.updateComponents(data);\n    }\n\n\n    public initialize(): void {\n        super.initialize();\n        let markerSize = this.config.get('markerSize'),\n            areaOpacity = this.config.get('areaOpacity'),\n            legend = this.config.get('legend');\n\n        this.container.add(this.axes).add(this.streams);\n\n        if (legend) {\n            this.legend = new Legend();\n            this.container.add(this.legend);\n        }\n    }\n}\n\nexport default SvgStrategyStreamgraph;","import * as Colors from '../colors';\n\nexport const defaults =  {\n    selector: '#chart',\n    colorScale: Colors.category4(),\n    //Axes\n    xAxisType: 'time',\n    xAxisFormat: '%y/%m/%d',\n    xAxisLabel: null,\n    yAxisType: 'linear',\n    yAxisFormat: '',\n    yAxisLabel: null,\n    yAxisShow:false,\n    //margins\n    marginTop: 20,\n    marginRight: 250,\n    marginBottom: 130,\n    marginLeft: 150,\n    //Width & height\n    width: '100%', // %, auto, or numeric \n    height: 250,\n    legend:true,\n    //Events\n    onDown(d) {\n    },\n    onHover(d) {\n    },\n    onLeave(d) {\n    },\n    onClick(d) {\n    },\n    onUp(d){\n        \n    },\n    maxNumberOfElements: 100, // used by keepDrawing method to reduce the number of elements in the current chart\n};","import Chart from './Chart';\nimport SvgStrategyStreamgraph from '../svg/strategies/SvgStrategyStreamgraph';\nimport Config from '../Config';\nimport { defaults } from '../utils/defaults/streamgraph';\nimport { calculateWidth } from '../utils/screen';\nimport {copy} from '../utils/functions';\n\nimport {\n    stackOrderInsideOut,\n    stackOffsetWiggle,\n    stack as d3Stack\n} from 'd3';\n\nclass Streamgraph extends Chart {\n\n    constructor(data: any, userConfig: any = {}) {\n        super(\n            new SvgStrategyStreamgraph(),\n            data,\n            userConfig\n        );\n    }\n\n    public keepDrawing(datum: any) {\n        var datumType = datum.constructor;\n\n        if (datumType === Array) {\n            this.data = this.data.concat(datum);\n        }\n        else {\n            this.data.push(datum);\n        }\n        this.draw(copy(this.data));\n    }\n\n\n    protected loadConfigFromUser(userData: { [key: string]: any; }): Config {\n        let config = new Config(),\n            //Selector\n            selector = userData['selector'] || defaults.selector,\n            //Margins \n            marginTop = userData['marginTop'] || defaults.marginTop,\n            marginLeft = userData['marginLeft'] || defaults.marginLeft,\n            marginRight = userData['marginRight'] || defaults.marginRight,\n            marginBottom = userData['marginBottom'] || defaults.marginBottom,\n            //Width & height\n            width = userData['width']\n                ? calculateWidth(userData['width'], selector) - marginLeft - marginRight\n                : calculateWidth(defaults.width, selector) - marginLeft - marginRight,\n            height = userData['height'] || defaults.height,\n            //Axis\n            xAxisType = userData['xAxisType'] || defaults.xAxisType,\n            xAxisFormat = userData['xAxisFormat'] || defaults.xAxisFormat,\n            xAxisLabel = userData['xAxisLabel'] || defaults.xAxisLabel,\n            yAxisType = userData['yAxisType'] || defaults.yAxisType,\n            yAxisFormat = userData['yAxisFormat'] || defaults.yAxisFormat,\n            yAxisLabel = userData['yAxisLabel'] || defaults.yAxisLabel,\n            yAxisShow = userData['yAxisShow'] || defaults.yAxisShow,\n            //Color\n            colorScale = userData['colorScale'] || defaults.colorScale,\n            //Events\n            onDown = userData['onDown'] || defaults.onDown,\n            onUp = userData['onUp'] || defaults.onUp,\n            onHover = userData['onHover'] || defaults.onHover,\n            onClick = userData['onClick'] || defaults.onClick,\n            onLeave = userData['onLeave'] || defaults.onLeave,\n\n            legend = (typeof userData['legend'] === 'undefined') ? defaults.legend : userData['legend'],\n            stacked = true, // Streamgraph is always stacked; ignoring default or user properties.\n            stack = d3Stack().value((d, k) => d.value[k]).order(stackOrderInsideOut).offset(stackOffsetWiggle);\n\n        config.put('selector', selector);\n        config.put('marginTop', marginTop);\n        config.put('marginLeft', marginLeft);\n        config.put('marginRight', marginRight);\n        config.put('marginBottom', marginBottom);\n        config.put('width', width);\n        config.put('height', height);\n        config.put('xAxisType', xAxisType);\n        config.put('xAxisFormat', xAxisFormat);\n        config.put('xAxisLabel', xAxisLabel);\n        config.put('yAxisType', yAxisType);\n        config.put('yAxisFormat', yAxisFormat);\n        config.put('yAxisLabel', yAxisLabel);\n        config.put('yAxisShow', yAxisShow);\n        config.put('colorScale', colorScale);\n        config.put('onDown', onDown);\n        config.put('onUp', onUp);\n        config.put('onHover', onHover);\n        config.put('onClick', onClick);\n        config.put('onLeave', onLeave);\n        config.put('legend', legend);\n        config.put('stacked', stacked);\n        config.put('stack', stack);\n\n        return config;\n    }\n\n\n}\n\nexport default Streamgraph;","import * as Colors from '../colors';\n\nexport const defaults = {\n    selector: '#chart',\n    colorScale: Colors.category2(),\n    //Axes\n    xAxisType: 'time',\n    xAxisFormat: '%y/%m/%d',\n    xAxisLabel: null,\n    yAxisType: 'linear',\n    yAxisFormat: '',\n    yAxisLabel: null,\n    yAxisShow: true,\n\n    //margins\n    marginTop: 20,\n    marginRight: 250,\n    marginBottom: 130,\n    marginLeft: 150,\n    //Width & height\n    width: '100%', // %, auto, or numeric \n    height: 250,\n    legend: true,\n    //Events\n    onDown(d) {\n    },\n    onHover(d) {\n    },\n    onLeave(d) {\n    },\n    onClick(d) {\n    },\n    onUp(d) {\n    },\n    maxNumberOfElements: 100, // used by keepDrawing method to reduce the number of elements in the current chart\n};","import Chart from './Chart';\nimport SvgStrategyStreamgraph from '../svg/strategies/SvgStrategyStreamgraph';\nimport Config from '../Config';\nimport { defaults } from '../utils/defaults/stackedArea';\nimport { calculateWidth } from '../utils/screen';\nimport {copy} from '../utils/functions';\nimport {\n    stackOrderInsideOut,\n    stackOffsetNone,\n    stack as d3Stack\n} from 'd3';\n\nclass StackedArea extends Chart {\n\n    constructor(data: any, userConfig: any = {}) {\n        super(\n            new SvgStrategyStreamgraph(), //It uses the same strategy than streamgraph. The only difference is the stack.\n            data,\n            userConfig\n        );\n    }\n\n    public keepDrawing(datum: any) {\n        var datumType = datum.constructor;\n\n        if (datumType === Array) {\n            this.data = this.data.concat(datum);\n        }\n        else {\n            this.data.push(datum);\n        }\n        this.draw(copy(this.data));\n    }\n\n\n\n    protected loadConfigFromUser(userData: { [key: string]: any; }): Config {\n        let config = new Config(),\n            //Selector\n            selector = userData['selector'] || defaults.selector,\n            //Margins \n            marginTop = userData['marginTop'] || defaults.marginTop,\n            marginLeft = userData['marginLeft'] || defaults.marginLeft,\n            marginRight = userData['marginRight'] || defaults.marginRight,\n            marginBottom = userData['marginBottom'] || defaults.marginBottom,\n            //Width & height\n            width = userData['width']\n                ? calculateWidth(userData['width'], selector) - marginLeft - marginRight\n                : calculateWidth(defaults.width, selector) - marginLeft - marginRight,\n            height = userData['height'] || defaults.height,\n            //Axis\n            xAxisType = userData['xAxisType'] || defaults.xAxisType,\n            xAxisFormat = userData['xAxisFormat'] || defaults.xAxisFormat,\n            xAxisLabel = userData['xAxisLabel'] || defaults.xAxisLabel,\n            yAxisType = userData['yAxisType'] || defaults.yAxisType,\n            yAxisFormat = userData['yAxisFormat'] || defaults.yAxisFormat,\n            yAxisLabel = userData['yAxisLabel'] || defaults.yAxisLabel,\n            yAxisShow = userData['yAxisShow'] || defaults.yAxisShow,\n\n            //Color\n            colorScale = userData['colorScale'] || defaults.colorScale,\n            //Events\n            onDown = userData['onDown'] || defaults.onDown,\n            onUp = userData['onUp'] || defaults.onUp,\n            onHover = userData['onHover'] || defaults.onHover,\n            onClick = userData['onClick'] || defaults.onClick,\n            onLeave = userData['onLeave'] || defaults.onLeave,\n\n            legend = (typeof userData['legend'] === 'undefined') ? defaults.legend : userData['legend'],\n            stacked = true, // Streamgraph is always stacked; ignoring default or user properties.\n            stack = d3Stack().value((d, k) => d.value[k]).order(stackOrderInsideOut).offset(stackOffsetNone);\n\n        config.put('selector', selector);\n        config.put('marginTop', marginTop);\n        config.put('marginLeft', marginLeft);\n        config.put('marginRight', marginRight);\n        config.put('marginBottom', marginBottom);\n        config.put('width', width);\n        config.put('height', height);\n        config.put('xAxisType', xAxisType);\n        config.put('xAxisFormat', xAxisFormat);\n        config.put('xAxisLabel', xAxisLabel);\n        config.put('yAxisType', yAxisType);\n        config.put('yAxisFormat', yAxisFormat);\n        config.put('yAxisLabel', yAxisLabel);\n        config.put('yAxisShow', yAxisShow);\n        config.put('colorScale', colorScale);\n        config.put('onDown', onDown);\n        config.put('onUp', onUp);\n        config.put('onHover', onHover);\n        config.put('onClick', onClick);\n        config.put('onLeave', onLeave);\n        config.put('legend', legend);\n        config.put('stacked', stacked);\n        config.put('stack', stack);\n\n        return config;\n    }\n\n\n}\n\nexport default StackedArea;","\nimport Component from './Component';\nimport XYAxes from './XYAxes';\nimport Config from '../../Config';\nimport { simple2nested } from '../../utils/dataTransformation';\n\nimport {\n    extent,\n    line,\n    nest,\n    scaleBand,\n    scaleLinear,\n    map\n} from 'd3';\n\nclass Timeboxset extends Component {\n\n    private xyAxes: XYAxes;\n\n    constructor(xyAxes: XYAxes) {\n        super();\n        this.xyAxes = xyAxes;\n    }\n\n\n    public render(): void {\n        //Do nothing, since lines render only when new data is received.\n    }\n\n    public update(data: [any]): void {\n        let colorScale = this.config.get('colorScale'),\n            height = this.config.get('height'),\n            onDown = this.config.get('onDown'),\n            onUp = this.config.get('onUp'),\n            onLeave = this.config.get('onLeave'),\n            onHover = this.config.get('onHover'),\n            onClick = this.config.get('onClick'),\n            keys = map(data, (d) => d.key).keys(),\n            layer = this.svg.selectAll('.serie').data(data),\n            layerEnter = null,\n            layerMerge = null,\n            box = null,\n            boxEnter = null,\n            boxMerge = null,\n            extLanes = null,\n            yLanes = null,\n            yLanesBand = scaleBand().range([0, keys.length + 1]).domain(keys),\n            x = this.xyAxes.x.xAxis.scale(),\n            y = this.xyAxes.y.yAxis.scale();\n\n        data = simple2nested(data);\n        extLanes = extent(data, (d, i) => i);\n        yLanes = scaleLinear().domain([extLanes[0], extLanes[1] + 1]).range([0, height]);\n\n        layer = this.svg.selectAll('.serie').data(data);\n        layerEnter = layer.enter().append('g');\n\n        layerMerge = layer.merge(layerEnter)\n            .attr('class', 'serie');\n\n\n        box = layerMerge.selectAll('rect')\n            .data((d) => d.values);\n\n        boxEnter = box.enter().append('rect');\n\n        boxMerge = box.merge(boxEnter)\n            .attr('width', (d) => x(d.end) - x(d.start))\n            .attr('x', (d) => x(d.start))\n            .attr('y', (d) => y(d.key))\n            .attr('fill', (d) => colorScale(parseInt(yLanesBand(d.key))))\n            .attr('height', () => 0.8 * yLanes(1));\n\n        box = this.svg.selectAll('g.serie rect');\n\n        box\n            .on('mousedown.user', onDown)\n            .on('mouseup.user', onUp)\n            .on('mouseleave.user', onLeave)\n            .on('mouseover.user', onHover)\n            .on('click.user', onClick);\n    }\n\n}\n\nexport default Timeboxset;","import XYAxes from '../components/XYAxes';\nimport Legend from '../components/Legend';\nimport TimeBoxset from '../components/Timeboxset';\n\nimport Config from '../../Config';\nimport SvgChart from '../base/SvgChart';\nimport { sortByField } from '../../utils/dataSorting';\nimport { convertPropretiesToTimeFormat } from '../../utils/dataTransformation';\n\nclass SvgStrategySwimlane extends SvgChart {\n    /**\n     * \n     * XY Axes. Horizontal and vertical references\n     * \n     * @private\n     * @type {XYAxes}\n     * @memberOf SvgStrategySwimlane\n     */\n    private axes: XYAxes;\n\n    private legend: Legend;\n\n\n    private boxes: TimeBoxset;\n\n    constructor() {\n        super();\n        this.axes = new XYAxes();\n        this.boxes = new TimeBoxset(this.axes);\n    }\n\n    public draw(data: [{}]) {\n        let xAxisFormat = this.config.get('xAxisFormat');\n        convertPropretiesToTimeFormat(data, ['start', 'end'], xAxisFormat);       \n        \n        sortByField(data, 'start');\n        \n        this.container.updateComponents(data);\n    }\n\n\n    public initialize(): void {\n        super.initialize();\n        let markerSize = this.config.get('markerSize'),\n            areaOpacity = this.config.get('areaOpacity'),\n            legend = this.config.get('legend');\n\n        this.container.add(this.axes);\n\n        if (legend) {\n            this.legend = new Legend();\n            this.container.add(this.legend).add(this.boxes);\n        }\n    }\n}\n\nexport default SvgStrategySwimlane;","import * as Colors from '../colors';\n\nexport const defaults = {\n    selector: '#chart',\n    colorScale: Colors.category3(),\n    //Axes\n    xAxisType: 'time',\n    xAxisFormat: '%y/%m/%d',\n    xAxisLabel: null,\n    yAxisType: 'categorical',\n    yAxisFormat: 's',\n    yAxisLabel: null,\n    yAxisShow: true,\n\n    //margins\n    marginTop: 20,\n    marginRight: 250,\n    marginBottom: 30,\n    marginLeft: 50,\n    //Width & height\n    width: '100%', // %, auto, or numeric \n    height: 250,\n    legend: true,\n    //Events\n    onDown(d) {\n    },\n    onHover(d) {\n    },\n    onLeave(d) {\n    },\n    onClick(d) {\n    },\n    onUp(d) {\n\n    }\n};","import Chart from './Chart';\nimport SvgStrategySwimlane from '../svg/strategies/SvgStrategySwimlane';\nimport Config from '../Config';\nimport { defaults } from '../utils/defaults/swimlane';\nimport { calculateWidth } from '../utils/screen';\nimport {\n    stackOrderInsideOut,\n    stackOffsetWiggle,\n    stack as d3Stack\n} from 'd3';\nimport {copy} from '../utils/functions';\n\nclass Swimlane extends Chart {\n\n    constructor(data: any, userConfig: any = {}) {\n        super(\n            new SvgStrategySwimlane(),\n            data,\n            userConfig\n        );\n    }\n\n    public keepDrawing(datum: any) {\n        var datumType = datum.constructor;\n\n        if (datumType === Array) {\n            this.data = this.data.concat(datum);\n        }\n        else {\n            this.data.push(datum);\n        }\n        this.draw(copy(this.data));\n    }\n\n\n    protected loadConfigFromUser(userData: { [key: string]: any; }): Config {\n        let config = new Config(),\n            //Selector\n            selector = userData['selector'] || defaults.selector,\n            //Margins \n            marginTop = userData['marginTop'] || defaults.marginTop,\n            marginLeft = userData['marginLeft'] || defaults.marginLeft,\n            marginRight = userData['marginRight'] || defaults.marginRight,\n            marginBottom = userData['marginBottom'] || defaults.marginBottom,\n            //Width & height\n            width = userData['width']\n                ? calculateWidth(userData['width'], selector) - marginLeft - marginRight\n                : calculateWidth(defaults.width, selector) - marginLeft - marginRight,\n            height = userData['height'] || defaults.height,\n            //Axis\n            xAxisType = userData['xAxisType'] || defaults.xAxisType,\n            xAxisFormat = userData['xAxisFormat'] || defaults.xAxisFormat,\n            xAxisLabel = userData['xAxisLabel'] || defaults.xAxisLabel,\n            yAxisType = userData['yAxisType'] || defaults.yAxisType,\n            yAxisFormat = userData['yAxisFormat'] || defaults.yAxisFormat,\n            yAxisLabel = userData['yAxisLabel'] || defaults.yAxisLabel,\n            yAxisShow = userData['yAxisShow'] || defaults.yAxisShow,\n\n            //Color\n            colorScale = userData['colorScale'] || defaults.colorScale,\n            //Events\n            onDown = userData['onDown'] || defaults.onDown,\n            onUp = userData['onUp'] || defaults.onUp,\n            onHover = userData['onHover'] || defaults.onHover,\n            onClick = userData['onClick'] || defaults.onClick,\n            onLeave = userData['onLeave'] || defaults.onLeave,\n\n            legend = (typeof userData['legend'] === 'undefined') ? defaults.legend : userData['legend'];\n        config.put('selector', selector);\n        config.put('marginTop', marginTop);\n        config.put('marginLeft', marginLeft);\n        config.put('marginRight', marginRight);\n        config.put('marginBottom', marginBottom);\n        config.put('width', width);\n        config.put('height', height);\n        config.put('xAxisType', xAxisType);\n        config.put('xAxisFormat', xAxisFormat);\n        config.put('xAxisLabel', xAxisLabel);\n        config.put('yAxisType', yAxisType);\n        config.put('yAxisFormat', yAxisFormat);\n        config.put('yAxisLabel', yAxisLabel);\n        config.put('yAxisShow', yAxisShow);\n\n        config.put('colorScale', colorScale);\n        config.put('onDown', onDown);\n        config.put('onUp', onUp);\n        config.put('onHover', onHover);\n        config.put('onClick', onClick);\n        config.put('onLeave', onLeave);\n        config.put('onUp', onUp);\n        config.put('legend', legend);\n\n        return config;\n    }\n}\n\nexport default Swimlane;","import Component from \"./Component\";\nimport {scaleLinear} from \"d3\";\n\nclass XRadialAxis extends Component {\n\n    private _xRadialAxis: any;\n\n    constructor() {\n        super();\n    }\n\n    update(data): void {}\n\n    render(): void {\n        this._xRadialAxis = scaleLinear().range([0, 2 * Math.PI]);\n    }\n\n    get xRadialAxis(): any {\n        return this._xRadialAxis;\n    }\n}\n\nexport default XRadialAxis;","import Component from './Component';\nimport {\n    scaleSqrt\n} from 'd3';\n\nclass YRadialAxis extends Component {\n\n    private _yRadialAxis: any;\n\n    constructor() {\n        super();\n    }\n\n    public render() {\n        let width = this.config.get('width'),\n            height = this.config.get('height'),\n            radius = null;\n        radius = (Math.min(width, height) / 2) - 10;\n        this._yRadialAxis = scaleSqrt().range([0, radius]);\n    };\n    \n    public update(data: [any]) {};\n\n    get yRadialAxis(): any {\n        return this._yRadialAxis;\n    }\n}\n\nexport default YRadialAxis;","import Component from \"./Component\";\nimport XRadialAxis from './XRadialAxis';\nimport YRadialAxis from \"./YRadialAxis\";\nimport Config from \"../../Config\";\n\nclass RadialAxes extends Component {\n    private _x: XRadialAxis;\n    private _y: YRadialAxis;\n\n    constructor() {\n        super();\n        this._x = new XRadialAxis();\n        this._y = new YRadialAxis();\n    }\n\n    public configure(config: Config, svg: any){\n        super.configure(config, svg);\n        this._x.configure(config, svg);\n        this._y.configure(config, svg);\n    }\n\n    public render(): void {\n        this._x.render();\n        this._y.render();\n    }\n\n    public update(data): void {\n        this._x.update(data);\n        this._y.update(data);\n    }\n\n\n    get x(): XRadialAxis {\n        return this._x;\n    }\n\n    get y(): YRadialAxis {\n        return this._y;\n    }\n}\n\nexport default RadialAxes;\n","import Component from \"./Component\";\nimport XRadialAxis from \"./XRadialAxis\"\nimport YRadialAxis from \"./YRadialAxis\"\nimport {arc, stratify, partition} from \"d3\";\n\nclass SunburstDisk extends Component {\n\n    private x: XRadialAxis;\n    private y: YRadialAxis;\n\n    constructor(x: XRadialAxis, y: YRadialAxis) {\n        super();\n        this.x = x;\n        this.y = y;\n\n    }\n\n    /**\n     * Removes all the paths (arcs). Doing this before each redraw prevents the\n     * transition to mess up the arcs.\n     * @private\n     */\n    private removePaths() {\n        this.svg.selectAll('path').remove();\n    }\n\n    /**\n     * From: http://bl.ocks.org/kerryrodden/7090426\n     * @param node\n     * @returns {Array}\n     * @private\n     */\n    private getAncestors(node) {\n        let path = [];\n        let current = node;\n        while (current.parent) {\n            path.unshift(current);\n            current = current.parent;\n        }\n        return path;\n    }\n\n    update(data: [any]): void {\n        let arcGen = arc()\n            .startAngle((d) => Math.max(0, Math.min(2 * Math.PI, this.x.xRadialAxis(d.x0))))\n            .endAngle((d) => Math.max(0, Math.min(2 * Math.PI, this.x.xRadialAxis(d.x1))))\n            .innerRadius((d) => Math.max(0, this.y.yRadialAxis(d.y0)))\n            .outerRadius((d) => Math.max(0, this.y.yRadialAxis(d.y1)));\n        let colorScale = this.config.get('colorScale');\n\n        // Remove all the paths before redrawing\n        this.removePaths();\n\n        // Create layout partition\n        let root = stratify()\n            .id((d) => d.id)\n            .parentId((d) => d.parent)\n            (data);\n        root.sum((d) =>  d.value);\n        partition()(root);\n\n        // Draw the paths (arcs)\n        let paths = this.svg.selectAll('path')\n            .data(root.descendants())\n            .enter().append('path')\n            .attr('d', arcGen)\n            .style('fill', (d) => {\n                if (!d.parent) {\n                    return 'white';\n                } else {\n                    return colorScale(d.data.label);\n                }\n            })\n            .style('stroke', '#fff')\n            .style('stroke-width', '2')\n            .style('shape-rendering', 'crispEdge');\n\n        paths // TODO extract events to config?\n            .on('mouseover.default', (d) => {\n                let ancestors = this.getAncestors(d);\n                // Fade all the arcs\n                if (ancestors.length > 0) {\n                    this.svg.selectAll('path')\n                        .style('opacity', 0.3);\n                }\n                this.svg.selectAll('path')\n                    .filter((node) => ancestors.indexOf(node) >= 0)\n                    .style('opacity', 1);\n                // Hightlight the hovered arc\n                this.svg.select('.text-indicator .label').text(d.data.label);\n                this.svg.select('.text-indicator .value').text(d.value);\n            })\n            .on('mouseout.default', (d) => {\n                this.svg.selectAll('path').style('opacity', 1);\n                this.svg.select('.text-indicator .label').style('font-weight', 'normal');\n                this.svg.select('.text-indicator .label').text('');\n                this.svg.select('.text-indicator .value').text('');\n            });\n\n        paths\n            .on('mousedown.user', this.config.get('onDown'))\n            .on('mouseup.user', this.config.get('onUp'))\n            .on('mouseleave.user', this.config.get('onLeave'))\n            .on('mouseover.user', this.config.get('onHover'))\n            .on('click.user', this.config.get('onClick'));\n    }\n\n    render(): void {\n    }\n}\n\nexport default SunburstDisk;","import SvgChart from \"../base/SvgChart\";\nimport RadialAxes from \"../components/RadialAxes\";\nimport SunburstDisk from \"../components/SunburstDisk\";\nimport TextIndicator from \"../components/TextIndicator\";\n\nclass SvgStrategySunburst extends SvgChart {\n\n    private axes: RadialAxes;\n    private disk: SunburstDisk;\n    private textIndicator: TextIndicator;\n\n    constructor() {\n        super();\n        this.axes = new RadialAxes();\n        this.disk = new SunburstDisk(\n            this.axes.x, this.axes.y\n        );\n        this.textIndicator = new TextIndicator();\n    }\n\n    public draw(data: [{}]) {\n        this.container.translate(\n            this.config.get('width') / 2,\n            this.config.get('height') / 2\n        );\n        this.container.updateComponents(data);\n    }\n\n    public initialize(): void {\n        super.initialize();\n        this.container\n            .add(this.axes)\n            .add(this.disk)\n            .add(this.textIndicator);\n    }\n\n}\n\nexport default SvgStrategySunburst;\n","import * as Colors from '../colors';\n\nexport const defaults = {\n    selector: '#chart',\n    colorScale: Colors.category8(),\n    marginTop: 20,\n    marginRight: 20,\n    marginBottom: 30,\n    marginLeft: 50,\n    width: '50%', // %, auto, or numeric\n    height: 450,\n    tickLabel: '',\n    transitionDuration: 300,\n    maxNumberOfElements: 5, // used by keepDrawing to reduce the number of elements in the current chart\n    sortData: {\n        descending: false,\n        prop: 'x'\n    },\n    //Events\n    onDown(d) {\n    },\n    onHover(d) {\n    },\n    onLeave(d) {\n    },\n    onClick(d) {\n    },\n    onUp(d) {\n    }\n};","import Chart from \"./Chart\";\nimport Config from \"../Config\";\nimport SvgStrategySunburst from \"../svg/strategies/SvgStrategySunburst\";\nimport {defaults} from \"../utils/defaults/sunburst\";\nimport {calculateWidth} from \"../utils/screen\";\nimport {copy} from \"../utils/functions\";\n\nclass Sunburst extends Chart {\n\n\n    constructor(data: any, userConfig: any = {}) {\n        super(\n            new SvgStrategySunburst(),\n            data,\n            userConfig\n        );\n    }\n\n    protected loadConfigFromUser(userData: { [key: string]: any }): Config {\n        let config = new Config(),\n            //Selector\n            selector = userData['selector'] || defaults.selector,\n            //Margins\n            marginTop = userData['marginTop'] || defaults.marginTop,\n            marginLeft = userData['marginLeft'] || defaults.marginLeft,\n            marginRight = userData['marginRight'] || defaults.marginRight,\n            marginBottom = userData['marginBottom'] || defaults.marginBottom,\n            //Width & height\n            width = userData['width']\n                ? calculateWidth(userData['width'], selector) - marginLeft - marginRight\n                : calculateWidth(defaults.width, selector) - marginLeft - marginRight,\n            height = userData['height'] || defaults.height,\n            //Color\n            colorScale = userData['colorScale'] || defaults.colorScale,\n            //Events\n            onDown = userData['onDown'] || defaults.onDown,\n            onUp = userData['onUp'] || defaults.onUp,\n            onHover = userData['onHover'] || defaults.onHover,\n            onClick = userData['onClick'] || defaults.onClick,\n            onLeave = userData['onLeave'] || defaults.onLeave;\n\n        config.put('selector', selector);\n        config.put('marginTop', marginTop);\n        config.put('marginLeft', marginLeft);\n        config.put('marginRight', marginRight);\n        config.put('marginBottom', marginBottom);\n        config.put('width', width);\n        config.put('height', height);\n        config.put('colorScale', colorScale);\n        config.put('onDown', onDown);\n        config.put('onUp', onUp);\n        config.put('onHover', onHover);\n        config.put('onClick', onClick);\n        config.put('onLeave', onLeave);\n\n        return config;\n    }\n\n    protected keepDrawing(datum: any) {\n        let datumType = datum.constructor;\n        if (datumType === Array) {\n            if (this.data) {\n                this.data = this.data.concat(datum);\n            } else {\n                this.data = datum;\n            }\n        }\n        else {\n            this.data.push(datum);\n        }\n        this.draw(copy(this.data));\n    }\n\n}\n\nexport default Sunburst;","import {dispatch} from 'd3';\n\n/**\n * \n * A Datasource is the name given to the connection set up to a data endpoint. This class defines the common methods for the datasources,\n * such as start() and stop().\n * \n * @export Default export: Datasource class\n * \n * @class Datasource The Datasource class\n * \n */\nclass Datasource {\n    /**\n     * Creates an instance of Datasource.\n     * \n     * \n     * @memberOf Datasource\n    \n     */\n    protected dispatcher: any = null;\n    protected source : {any} = null;\n\n    constructor() {\n        // this.filters = [];\n        // this.properties = [];\n    }\n\n    /**\n     * Starts the stream of data\n     * \n     * \n     * @memberOf Datasource\n     */\n    start() {\n        window.console.log('Starting datasource');\n    }\n\n    /**\n     * \n     * If started, this method stops the stream of data\n     * \n     * @memberOf Datasource\n    \n     */\n    stop() {\n        window.console.log('Stopping datasource');\n    }\n\n\n    configure(dispatcher) {\n        this.dispatcher = dispatcher;\n    }\n\n/*\n\n    property(prop, newProp, cast) {\n        this.properties.push({ 'p': prop, 'newP': newProp, cast: cast });\n        return this;\n    }\n\n\n    convert(data) {\n        let result = {};\n        for (let i in this.properties) {\n            let p = this.properties[i].p;\n            let value = eval('data.' + this.properties[i].newP);\n            // if(this.properties[i].cast){\n            //    value = new this.properties[i].cast(value);\n            // }\n\n            result[p] = value;\n        }\n        return result;\n    }\n    */\n\n    /**\n     * Filters the incoming messages. Each data record that do not comply the filter condition will be discarded\n     * \n     * @param {any} filter A filter condition\n     * @returns this Datasource instance\n     * \n     * @memberOf Datasource\n     */\n    filter(filter) {\n        return this;\n    }\n}\n\nexport default Datasource;","import Datasource from './Datasource';\n\n/**\n * \n * This datasource set up a connection to a websocket server. \n * @export\n * @class WebsocketDatasource\n * @extends {Datasource}\n\n */\nclass WebsocketDatasource extends Datasource {\n\n    /**\n     * Creates an instance of WebsocketDatasource. This datasource will try to connect to the speficied websocket endpoint.\n     * <pre class=\"prettyprint\">\n     *    var source = {\n     *      endpoint: 'ws://192.168.3.32:3000/pathToWebsocketEndpoint';\n     *    };\n     * \n     *    linechart = new proteic.Linechart(new proteic.WebsocketDatasource(source));\n     * </pre>\n     * \n     * If new data is available, this datasource will forward the data records to the chart, which automatically repaint the chart with these new records. \n     * @param {any} source A websocket endpoint. If invalid, this class will throw an Error. \n     *  \n     * @memberOf WebsocketDatasource\n    \n     */\n    private ws: WebSocket;\n\n\n    constructor(source: { any }) {\n        super();\n        this.source = source;\n    }\n\n    /**\n     * Configure a dispatcher for this datasource.\n     * \n     * @param {any} dispatcher A d3 dispatcher. This dispatcher is in charge of receiving and sending events.\n     * \n     * @memberOf WebsocketDatasource\n     */\n    configure(dispatcher: any) {\n        this.dispatcher = dispatcher;\n    }\n\n    /**\n     * \n     * Initialize a websocket connection\n     * \n     * @memberOf WebsocketDatasource\n    \n     */\n    start() {\n        super.start();\n        this.ws = new WebSocket(this.source['endpoint']);\n\n        this.ws.onopen = (e) => {\n            this.dispatcher.call('onopen', this, e);\n        };\n        this.ws.onerror = (e) => {\n            throw new Error('An error occurred trying to reach the websocket server' + e);\n        };\n        this.ws.onmessage = (e) => {\n            var data = JSON.parse(e.data);\n            this.dispatcher.call('onmessage', this, data);\n        };\n    }\n    /**\n     * If started, this method close the websocket connection.\n     * \n     * @memberOf WebsocketDatasource\n    * */\n    stop() {\n        super.stop();\n        if (this.ws) {\n            this.ws.close();\n        }\n    }\n}\n\nexport default WebsocketDatasource;","import Datasource from './Datasource';\nimport {request} from 'd3';\n\n/**\n * \n * This datasource set up a connection to a http server. \n * @export\n * @class HTTPDatasource\n * @extends {Datasource}\n\n */\nexport default class HTTPDatasource extends Datasource {\n\n    /**\n     * Creates an instance of HTTPDatasource. This datasource will try to connect to the speficied HTTP endpoint.\n     * <pre class=\"prettyprint\">\n     *    var source = {\n     *      endpoint: 'https://randomuser.me/api';\n     *    };\n     * \n     *    linechart = new proteic.Linechart(new proteic.HTTPwDatasource(source));\n     * </pre>\n     * \n     * If new data is available, this datasource will forward the data records to the chart, which automatically repaint the chart with these new records. \n     * @param {any} source An http endpoint. If invalid, this class will throw an Error. \n     *  \n     * @memberOf HTTPDatasource\n     * \n     */\n    constructor(source) {\n        super();\n        this.source = source;\n        this.intervalId = -1;\n        this.started = false;\n    }\n\n   \n    /**\n     * \n     * Initialize an HTTP connection\n     * \n     * @memberOf HTTPDatasource\n    \n     */\n    start() {\n        if (!this.started) {\n            super.start();\n            let pollingTime = this.source.pollingTime;\n            let url = this.source.url;\n            this._startPolling(url, pollingTime);\n            this.started = true;\n        }\n    }\n\n\n    _startPolling(url, time = 1000) {\n        let interval = window.setInterval;\n        this.intervalId = interval(() => this._startRequest(url), time);\n    }\n\n    _startRequest(url) {\n        window.console.log('url', url);\n        request(url).get((e, response) => this._handleResponse(response));\n    }\n\n    _stopPolling() {\n        let clearInterval = window.clearInterval;\n        clearInterval(this.intervalId);\n    }\n\n    _handleResponse(xmlHttpRequest) {\n        let parseJson = window.JSON.parse;\n        if (xmlHttpRequest.readyState === 4 && xmlHttpRequest.status === 200) {\n            let response = parseJson(xmlHttpRequest.response);\n            this._handleOK(response);\n        }\n        else {\n            this._handleError(xmlHttpRequest);\n        }\n    }\n\n    _handleOK(data) {\n        if(this.properties.length > 0 ) {\n            data = this.convert(data);\n        }\n        this.dispatcher.call('onmessage', this, data);\n    }\n\n    _handleError(data) {\n        this.dispatcher.call('onerror', this, data);\n    }\n\n    /**\n     * If started, this method close the HTTP connection.\n     * \n     * @memberOf HTTPDatasource\n    * */\n    stop() {\n        if (this.started) {\n            this._stopPolling();\n            this.started = false;\n        }\n    }\n}"],"names":["dispatch","min","d3Min","max","d3Max","keys","map","select","axisBottom","scaleTime","scaleLinear","format","scaleBand","nest","timeParse","axisLeft","line","area","XYAxes","scaleOrdinal","scaleQuantile","Colors.category7","stack","defaults","Colors.category5","d3stack","range","d3range","arc","d3arc","Colors.diverging_spectral2","symbol","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveCardinal","Colors.category4","d3Stack","stackOrderInsideOut","stackOffsetWiggle","Colors.category2","stackOffsetNone","extent","TimeBoxset","Colors.category3","scaleSqrt","stratify","partition","Colors.category8","request"],"mappings":"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"}